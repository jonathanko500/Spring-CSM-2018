<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/planet/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/planet/</description>

<item>
	<title>Benjamin Cabe: Eclipse IoT Day is coming to the Bay Area – Submit a talk now!</title>
	<guid isPermaLink="false">https://blog.benjamin-cabe.com/?p=3099</guid>
	<link>http://feedproxy.google.com/~r/benjamin-cabe-planet-eclipse/~3/wBYb_wyG06Q/eclipse-iot-day-coming-bay-area-submit-talk-now</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://iot.eclipse.org/eclipse-iot-day-santa-clara-2018/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Eclipse IoT Day is coming to the Bay Area on May 14, 2018&lt;/a&gt;, and I really hope you will be joining us!&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://goo.gl/forms/L0znMdW1zOiAwu2w1&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;size-large wp-image-3104 aligncenter&quot; height=&quot;237&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2018/01/DT1BdFjWkAIfzKq-1024x512.png&quot; width=&quot;474&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We have opened a &lt;a href=&quot;https://goo.gl/forms/L0znMdW1zOiAwu2w1&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Call for Papers&lt;/a&gt; that will end on Feb 15th – so you have about 3 weeks to submit your talk!&lt;/p&gt;
&lt;p&gt;If you are considering submitting a talk but are not sure whether it would be a good fit, here are some of the reasons why it would totally be &lt;img alt=&quot;🙂&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/2.3/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You are &lt;strong&gt;building&lt;/strong&gt; an IoT solution that is based on open source software and Eclipse IoT components, and want to share some of the lessons learned along the way, the things you wished would be available as part of the open source IoT community&lt;/li&gt;
&lt;li&gt;You are &lt;strong&gt;contributing&lt;/strong&gt; to an Eclipse IoT project and want to provide an update on the overall roadmap,&lt;/li&gt;
&lt;li&gt;You care about &lt;strong&gt;open standards&lt;/strong&gt;, &lt;strong&gt;interoperability&lt;/strong&gt;, &lt;strong&gt;security&lt;/strong&gt;, &lt;strong&gt;edge computing&lt;/strong&gt;, … and want to share your expertise and network with the attendees of the IoT Day.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please don’t wait and &lt;a href=&quot;https://goo.gl/forms/L0znMdW1zOiAwu2w1&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;submit your talk&lt;/a&gt; today!  For what it’s worth I will be more than happy to &lt;a href=&quot;https://blog.benjamin-cabe.com/contact&quot;&gt;chat with you&lt;/a&gt; if you need feedback regarding your session idea.&lt;/p&gt;
 &lt;p&gt;The post &lt;a href=&quot;https://blog.benjamin-cabe.com/2018/01/25/eclipse-iot-day-coming-bay-area-submit-talk-now&quot; rel=&quot;nofollow&quot;&gt;Eclipse IoT Day is coming to the Bay Area – Submit a talk now!&lt;/a&gt; appeared first on &lt;a href=&quot;https://blog.benjamin-cabe.com&quot; rel=&quot;nofollow&quot;&gt;Benjamin Cabé&lt;/a&gt;.&lt;/p&gt;
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/benjamin-cabe-planet-eclipse/~4/wBYb_wyG06Q&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 25 Jan 2018 17:44:55 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse Newsletter | Coming in 2018</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/8WotbdxFrMg/</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/8WotbdxFrMg/</link>
	<description>What's coming to the Eclipse Community in 2018? Read the newsletter to find out!&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/8WotbdxFrMg&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 25 Jan 2018 15:30:00 +0000</pubDate>
</item>
<item>
	<title>Ian Skerrett: Last Day at the Eclipse Foundation</title>
	<guid isPermaLink="false">http://ianskerrett.wordpress.com/?p=4456</guid>
	<link>http://feedproxy.google.com/~r/IanSkerrett/~3/iVIxX4QuH6E/</link>
	<description>&lt;p&gt;This is my last day at the Eclipse Foundation. If you missed my earlier post, I have &lt;a href=&quot;https://ianskerrett.wordpress.com/2018/01/04/time-for-a-new-challenge/&quot;&gt;resigned from the Foundation&lt;/a&gt; and am starting to look for new opportunities.&lt;/p&gt;
&lt;p&gt;Thank you to everyone in the Eclipse community for making my time with the Foundation an amazing experience. It is the people that make a community. I will definitely miss the people in the Eclipse community.&lt;/p&gt;
&lt;p&gt;My plan is to stop posting to this blog. I’ve always wanted to &lt;a href=&quot;https://medium.com/@iskerrett/&quot;&gt;start on medium&lt;/a&gt; so now seems like a good time. I will continue to be active on &lt;a href=&quot;https://twitter.com/IanSkerrett&quot;&gt;Twitter&lt;/a&gt; and &lt;a href=&quot;https://www.linkedin.com/in/ianskerrett/&quot;&gt;LinkedIn&lt;/a&gt;. I hope we meet again soon.&lt;/p&gt;
&lt;p&gt;#Onward&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/IanSkerrett/~4/iVIxX4QuH6E&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 25 Jan 2018 15:28:21 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Article: JPA 2.2 Brings Some Highly Anticipated Changes</title>
	<guid isPermaLink="true">http://www.infoq.com/articles/JPA-2.2-Brings-Highly-Anticipated-Changes?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>http://www.infoq.com/articles/JPA-2.2-Brings-Highly-Anticipated-Changes?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;https://res.infoq.com/articles/JPA-2.2-Brings-Highly-Anticipated-Changes/en/smallimage/java-logo-1516663617190.jpeg&quot; /&gt;&lt;p&gt;Released this past summer, JPA 2.2 delivered some frequently requested enhancements, especially by providing better alignment with Java 8 features, such as support for the Date and Time API and the retrieval of a query result as a Stream.
&lt;/p&gt; &lt;i&gt;By Thorben Janssen&lt;/i&gt;</description>
	<pubDate>Thu, 25 Jan 2018 13:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Launching IoT Developer Survey 2018</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/utBMUYA-QH4/iotdevsurvey2018.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/utBMUYA-QH4/iotdevsurvey2018.php</link>
	<description>We are pleased to launch the fourth annual IoT Developer Survey! Complete the survey today.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/utBMUYA-QH4&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 24 Jan 2018 09:27:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: EE4J: Current Status and What’s Next</title>
	<guid isPermaLink="false">http://mmilinkov.wordpress.com/?p=1424</guid>
	<link>https://mmilinkov.wordpress.com/2018/01/23/ee4j-current-status-and-whats-next/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;There is a lot going on as Java EE continues its migration to the Eclipse Foundation. Since there are so many parallel threads, I thought it would be a good idea to recap where we are, and what is coming up in the next few weeks.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;First off, we are continuing to work on arriving at a new brand name. Last week the PMC provided the Eclipse Foundation with a potential list of names, and we are running trademark reviews to see if we believe that they can be properly secured. Obviously, we need to have a high degree of confidence that we can freely use the name around the world if we are going to use it to replace some as well known as Java EE. Once we have a short list of potentials we will be starting a community vote to help arrive at a final choice.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Secondly, the code is moving from the existing Oracle-led Java EE organization on GitHub into EE4J. The first nine projects which were proposed have all been created and provisioned, and the code is being moved into them as we speak. The next step on this front will be to propose the next round of projects to move next. As I understand it, the Oracle team will be proposing the JSON-B API and JavaMail projects next.&lt;/span&gt;&lt;b&gt; &lt;/b&gt;Soon after will come JAX-B, JAX-WS, JSTL, UEL, JAF, Security, JTA, Enterprise Management, Concurrency, and Common Annotations. &lt;span style=&quot;font-weight: 400;&quot;&gt;Everyone involved strongly believes that a key factor in the success of this entire migration is the rapid creation of a diverse and engaged open source community around this code, so we are moving as rapidly as possible to get these projects up and running. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We want to demonstrate to the world that these projects are capable of shipping. Therefore the short-term objective is to have the EE4J project ship a Java EE 8-compliant release as quickly as possible: i.e. a Java EE 8 certified release of Eclipse Glassfish and related projects. There are a couple of positive reasons for doing this:&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;It demonstrates that the EE4J projects are fully functional as open source projects, and that they and the PMC can run through the full process of a release under the auspices of the Eclipse Foundation and the Eclipse Development Process.&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;It gets downloadable code that users and adopters can access and run from EE4J as quickly as possible. Creating an ecosystem of developers and companies using this code is important, and the sooner we start the better.&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;A comment on the API projects that are moving over: several have asked on the mailing lists if the fact that the source has moved means that we can start changing the APIs directly in the EE4J projects. The short answer is “please, not quite yet”. There are several reasons for that: &lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We want to focus in the short term on shipping an EE 8 compliant release. So the fewer moving parts while we’re doing that, the better. &lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;There is going to be a new spec process that is going to be managing the evolution of these APIs in the future, and it hasn’t been set up yet. &lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;As has been discussed in several venues, this new spec process is going to be bootstrapped with some rules around the continued use of the javax namespace. We’re still working on what those rules are. &lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In the meantime if you really want to start prototyping some new APIs you are always free to fork the repos on GitHub. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Finally, we are working on establishing an Eclipse Foundation working group to provide a member-driven governance model for the EE4J community. Working groups are consortia which complement the Eclipse open source projects. Community-driven open source projects are great for a lot of things, but don’t do well with business and ecosystem topics such as marketing, developer outreach, branding, specifications, compliance programs, and the like. The first step in creating a working group is to write its core governance charter. We hope to have a draft of that available for review by the end of the month as well. My next blog post will provide some additional information and background on that topic.&lt;/span&gt;&lt;/p&gt;</description>
	<pubDate>Tue, 23 Jan 2018 17:48:29 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: EE4J Code Begins the Journey to Open Source</title>
	<guid isPermaLink="true">http://www.infoq.com/news/2018/01/EE4JCodeArrives?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>http://www.infoq.com/news/2018/01/EE4JCodeArrives?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;http://www.infoq.com/styles/i/logo_bigger.jpg&quot; /&gt;&lt;p&gt;Enterprise Java source code is beginning the Open Source journey to the Eclipse EE4J project&lt;/p&gt; &lt;i&gt;By Tim Hodkinson&lt;/i&gt;</description>
	<pubDate>Mon, 22 Jan 2018 15:40:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Eclipse Community Directions for 2018</title>
	<guid isPermaLink="false">http://mmilinkov.wordpress.com/?p=1422</guid>
	<link>https://mmilinkov.wordpress.com/2018/01/22/eclipse-community-directions-for-2018/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;As 2018 begins I would like to share a few thoughts on where I think the Eclipse community is heading.  I am looking forward to an incredibly busy year for myself, the staff of the Eclipse Foundation, and our community, because this is going to be a year of tremendous growth and opportunity. I will try to give a brief overview of what I see as some of the exciting things that are going on at the Eclipse Foundation. I am sure that I will miss some, so apologies in advance!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Of course the big news of the past few months was the&lt;/span&gt;&lt;a href=&quot;https://blogs.oracle.com/theaquarium/opening-up-ee-update&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;announcement by Oracle&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; that Java EE is going to be moving to the Eclipse Foundation. This represents the largest single contribution to the Eclipse community since — well, the original Eclipse IDE project in 2001. It is approximately 35 new projects, hundreds of new committers and contributors, and millions of lines of code. It is and was an incredible endorsement of the Eclipse Foundation’s mission as the leading organization for individuals and companies to collaborate on commercial-friendly open source software. Since the announcement in September, we have created the new Eclipse Enterprise for Java (EE4J) top-level project, and source code is starting to move into the projects. During 2018 our collective mission will be to create a functioning and successful community around this code, pick a new brand to replace Java EE going forward, ship a release compatible with Java EE 8, open source the Java EE TCKs, and establish a new specification process to shape the future of cloud native Java. I feel out of breath just thinking of it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;But in addition to this Java EE work, it is clear that the Eclipse Foundation is now playing a pivotal role in the future of the Java ecosystem. Projects such as&lt;/span&gt;&lt;a href=&quot;http://microprofile.io/&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse MicroProfile&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (microservices for Java),&lt;/span&gt;&lt;a href=&quot;https://www.eclipse.org/openj9/&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse OpenJ9&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (Java virtual machine),&lt;/span&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.deeplearning4j&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse DeepLearning4J&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (machine learning),&lt;/span&gt;&lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse Collections&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (highly scalable collections),&lt;/span&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.jnosql&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse JNoSQL&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (NoSQL for Java EE) and&lt;/span&gt;&lt;a href=&quot;http://vertx.io/&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse Vert.x&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (reactive apps for Java) are leading the next generation of Java innovation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;From the Eclipse Science community comes&lt;/span&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/science.xacc&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse XACC&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, which I believe is the world’s first community-led open source project in the new field of quantum computing. Originating from Oak Ridge National Laboratory, XACC is working to integrate quantum processors with the high-performance computing environments that are the backbone of modern scientific computing. It will be exciting to see XACC ship its first release in 2018, and to support its desire to create an open collaboration to shape the next generation of computing hardware and programming paradigms.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The Eclipse IoT community has been a significant growth area within the Eclipse community over the past couple of years. In 2017 Eclipse IoT grew to over 25 projects, and is attracting a substantial developer and corporate community.. It is also a terrifically ambitious group, with a&lt;/span&gt;&lt;a href=&quot;https://iot.eclipse.org/resources/white-papers/Eclipse%20IoT%20White%20Paper%20-%20The%20Three%20Software%20Stacks%20Required%20for%20IoT%20Architectures.pdf&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;vision of providing technology stacks&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; that span the smallest of constrained devices, through device gateways, to cloud-scale data collection and management runtimes. Late in 2017 the group published a&lt;/span&gt;&lt;a href=&quot;https://iot.eclipse.org/resources/white-papers/Eclipse%20IoT%20White%20Paper%20-%20Open%20Source%20Software%20for%20Industry%204.0.pdf&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;white paper&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; on the role that open source will play in Industry 4.0, or industrial IoT. This white paper is important because in many ways it sets out the vision for the group, which has been primarily focused on industrial IoT. In 2018 the primary goal for Eclipse IoT is to start shipping these stacks rather than simply projects. In other words, to create cross-project collaborations that provide IoT adopters with more complete solutions rather than individual building blocks. This will go a long way to paving the way for broad industry adoption of these open source IoT technologies.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Finally, a word on developer tools — the Eclipse Foundation’s original franchise. I noticed recently that according to at least&lt;/span&gt;&lt;a href=&quot;http://pypl.github.io/IDE.html&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;one source&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, the Eclipse IDE is maintaining its position as the #1 IDE in the world, and grew its market share substantially last year. The goal for this year is to continue this trend. In addition, the&lt;/span&gt;&lt;a href=&quot;https://www.eclipse.org/che/&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse Che&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; cloud IDE continues to grow its community and adoption. As more and more developers work on cloud native applications, the appeal of a cloud IDE that works where they do is going to grow. Che is well positioned to be the leader in this space and is the only community-led cloud IDE.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Anyone who has seen me speak over the past couple of years has likely heard me express the idea that the “community is the capacity.” The Eclipse Foundation is a 30 person organization that supports a community of hundred of projects, hundreds of members, thousands of committers and contributors, and millions of users. Whenever I take a moment to reflect on what we accomplish together it is breathtaking. The breadth of the technology that we collectively produce is vast, and our community spans the globe. Equally exciting, engagement continues to grow with a variety of industries notably automotive, power, transportation, etc. interested in leveraging the Eclipse Foundation as the place for open, commercial collaboration.&lt;/p&gt;
&lt;p&gt;I am incredibly optimistic that 2018 is going to be one of the most exciting years we’ve ever had, so please get involved!&lt;/p&gt;</description>
	<pubDate>Mon, 22 Jan 2018 13:01:45 +0000</pubDate>
</item>
<item>
	<title>PapyrusUML: Papyrus UML support in Hawk</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=1069</guid>
	<link>https://papyrusuml.wordpress.com/2018/01/19/papyrus-uml-support-in-hawk/</link>
	<description>&lt;p&gt;&lt;img align=&quot;right&quot; alt=&quot;mondo project&quot; height=&quot;25%&quot; src=&quot;https://i2.wp.com/api.ning.com/files/ujcza9N5GbJv7*4sWhEl42fjxvc3NEu8iKexmuwI5d7l0xuxOVoUVOT0aFOsqT8nAnFcZncOVdcnt0UFko9J8WJQ-yWFS5EF/MONDOhoriztag.png&quot; width=&quot;25%&quot; /&gt; The &lt;a href=&quot;http://www.mondo-project.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Mondo  Project&lt;/a&gt;‘s &lt;a href=&quot;https://github.com/mondo-project/mondo-hawk&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;mondo-hawk&lt;/a&gt; now supports my models!&lt;/p&gt;
&lt;p&gt;You can read more about this on their &lt;a href=&quot;https://github.com/mondo-project/mondo-hawk/wiki/Papyrus-UML-support-in-Hawk&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;announcement page&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Note that they only index my semantic model (i.e., the “.uml” files) and not the diagrams, which makes sense in their context given that diagrams are not semantic elements.&lt;/p&gt;
&lt;p&gt;Still, this is so cool!&lt;/p&gt;</description>
	<pubDate>Fri, 19 Jan 2018 15:00:40 +0000</pubDate>
</item>
<item>
	<title>PapyrusUML: Papyrus has layers (like parfait?)</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=1064</guid>
	<link>https://papyrusuml.wordpress.com/2018/01/17/papyrus-has-layers-like-parfait/</link>
	<description>&lt;p&gt;The Papyrus layers functionality has been in incubation for a while, and some may be wondering what it’s all about:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The Layers mechanism allows to build different views of an underlying UML diagrams by applying selections rules as well as graphical transformation operators.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You can read the description of this function in the &lt;a href=&quot;https://wiki.eclipse.org/Papyrus/Oxygen_Work_Description/NewFeature/Layers&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Papyrus Wiki&lt;/a&gt;, and you can also see it in action in this YouTube video:&lt;/p&gt;
&lt;div class=&quot;jetpack-video-wrapper&quot;&gt;&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;</description>
	<pubDate>Wed, 17 Jan 2018 16:17:14 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: KubeCon CloudNativeCon 2017 Takeaways + 2018 Predictions</title>
	<guid isPermaLink="false">http://aniszczyk.org/?p=4167</guid>
	<link>http://aniszczyk.org/2018/01/15/kubecon-cloudnativecon-2017-takeaways-2018-predictions/</link>
	<description>&lt;p&gt;It was a crazy 2017 for me with 300,000 miles of business travel, but it was all worth it to experience every major cloud provider adopt Kubernetes in some fashion and grow our community to 14 projects total! Also, it was amazing to help host 4000+ people in Austin for &lt;a href=&quot;https://events.linuxfoundation.org/events/kubecon-cloudnativecon-europe-2018/&quot;&gt;KubeCon/CloudNativeCon,&lt;/a&gt; where it actually snowed!&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;&lt;a href=&quot;https://twitter.com/hashtag/KeepAustinWeird?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#KeepAustinWeird&lt;/a&gt;&lt;br /&gt;Today’s surprise: snow and bumping into an old friend, &lt;a href=&quot;https://twitter.com/sabdfl?ref_src=twsrc%5Etfw&quot;&gt;@sabdfl&lt;/a&gt; with &lt;a href=&quot;https://twitter.com/rezgol?ref_src=twsrc%5Etfw&quot;&gt;@rezgol&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/KubeCon?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#KubeCon&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/CloudNativeCon?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#CloudNativeCon&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/austin?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#austin&lt;/a&gt; &lt;a href=&quot;https://t.co/Fs1ykzdFdm&quot;&gt;pic.twitter.com/Fs1ykzdFdm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— zahedab (@zahedab) &lt;a href=&quot;https://twitter.com/zahedab/status/939008977282592768?ref_src=twsrc%5Etfw&quot;&gt;December 8, 2017&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;I’d like to share some personal take aways I had from the conference (of course with accompanying tweets) that will serve as predictions for 2018:&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-size: 18px; font-weight: bold;&quot;&gt;Exciting Times for Boring Container Infrastructure!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;One of the themes from the conference was that the Kubernetes community was working hard to make infrastructure boring. In my humble opinion, Kubernetes becomes something like “POSIX of the cloud” or “Linux of the Cloud” where Kubernetes is solidifying kernel space but the excitement should be in user space.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;The power of boring &lt;a href=&quot;https://twitter.com/hashtag/kubecon?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#kubecon&lt;/a&gt; &lt;a href=&quot;https://t.co/x2VuPau6zl&quot;&gt;pic.twitter.com/x2VuPau6zl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Barton George (@barton808) &lt;a href=&quot;https://twitter.com/barton808/status/938800626246537216?ref_src=twsrc%5Etfw&quot;&gt;December 7, 2017&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.opencontainers.org/blog/2017/11/10/oci-update-v1-0-1-release-new-maintainer&quot;&gt;Open Container Initiative (OCI) community&lt;/a&gt; also held a meeting where it celebrated its v1.0 release to make containers a bit more boring and standardized.&lt;/p&gt;
&lt;p&gt;In 2018, look for the boring infrastructure pattern to continue, the OCI community is planning to make distribution a bit more boring via a &lt;a href=&quot;https://github.com/opencontainers/tob/issues/34&quot;&gt;proposed distribution API specification&lt;/a&gt;. I also predict that some of the specialized/boutique cloud providers who haven’t offered Kubernetes integration will do so finally in 2018.&lt;/p&gt;
&lt;h4 style=&quot;text-align: left;&quot;&gt;CNCF + KubeCon and CloudNativeCon: Home of Open Infrastructure&lt;/h4&gt;
&lt;p&gt;CNCF has a &lt;a href=&quot;https://www.cncf.io/projects/&quot;&gt;community of independently governed projects&lt;/a&gt;, as of today which there are 14 of covering all parts of cloud native. There’s &lt;a href=&quot;https://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt; which integrates beautifully with &lt;a href=&quot;https://kubernetes.io&quot;&gt;Kubernetes&lt;/a&gt; but also brings modern monitoring practices to environments outside of cloud native land too! There’s &lt;a href=&quot;https://www.envoyproxy.io/&quot;&gt;Envoy&lt;/a&gt; which is a cloud native edge and proxy, that integrates with Kubernetes through projects like &lt;a href=&quot;https://github.com/heptio/contour&quot;&gt;Contour&lt;/a&gt; or Istio, however, Envoy can be used in any environment where a reverse proxy is used. &lt;a href=&quot;https://grpc.io/&quot;&gt;gRPC&lt;/a&gt; is a universal RPC framework that can help you build services that run on Kubernetes or any environment for that matter! There are many other CNCF projects that have use cases outside of just purely a cloud native environment and we will see more of that usage grow over time to help companies in transition to a cloud native world.&lt;/p&gt;
&lt;p&gt;In 2018, look for CNCF conferences continue to grow, expand locations (hello China) and truly become the main event for open source infrastructure. In Austin it was incredible to have talks and people from the Ansible to Eclipse to JVM to Openstack to Zephyr communities (and more). I can’t think of any other event that brings together open source infrastructure across all layers of the &lt;a href=&quot;https://github.com/cncf/landscape&quot;&gt;cloud native landscape.&lt;/a&gt;&lt;/p&gt;
&lt;h4 style=&quot;text-align: left;&quot;&gt;Moving up the Stack: 2018 is Year of Service Meshes&lt;/h4&gt;
&lt;p&gt;Service meshes are fairly a new concept (I highly recommend this &lt;a href=&quot;https://medium.com/@mattklein123/service-mesh-data-plane-vs-control-plane-2774e720f7fc&quot;&gt;blog post by Matt Klein&lt;/a&gt; if you’re new to the concept) and will become the middleware of the cloud native world. In CNCF, we currently host Envoy and linkerd which helped poineer this space. In 2018, I expect more service mesh related projects to be open sourced along with more participation from traditional networking vendors. We will also see some of the projects in this space to mature with real production usage.&lt;/p&gt;
&lt;h4 style=&quot;text-align: left;&quot;&gt;Cloud Native AI + Machine Learning: Kubeflow&lt;/h4&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;In 2018, ML focused workloads and projects will find ways to integrate with Kubernetes to help scale and encourage portability of infrastructure. Just take a look at the &lt;a href=&quot;https://github.com/google/kubeflow&quot;&gt;kubeflow&lt;/a&gt; project which aims to make ML with Kubernetes easy, portable and scalable. Note, this doesn’t mean that AI/ML folks will have to become Kubernetes experts, all this means is that Kubernetes will be powering more AI/ML workloads (and potentially even sharing their existing cloud native infrastructure). I expect more startups to form in this space (see &lt;a href=&quot;https://riseml.com&quot;&gt;RiseML&lt;/a&gt; as an example), look to see a “cloud native” AI movement that focuses on portability of workloads.&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: 18px; font-weight: bold;&quot;&gt;Developer Experience Focus and Cloud Native Tooling&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;One of my favorite keynotes from KubeCon was &lt;a href=&quot;https://www.youtube.com/watch?v=gCQfFXSHSxw&quot;&gt;Brendan Burns speaking about metaparticle.io&lt;/a&gt;, a standard library for cloud native applications. I completely agree with his premise that we need to democratize distributed systems development. Not everyone developer needs to know about Kubernetes the same way not every developer needs to understand POSIX. In 2018, we are going to see an explosion of open source “cloud native languages” that will offer multiple approaches to democratizing distributed systems development.&lt;/p&gt;
&lt;p&gt;Also in 2018, I expect us to see growth in cloud native development environments (IDEs) to provide better developer experience. As an example, for those that were wondering why there was an Eclipse Foundation booth at KubeCon, they were demoing a technology called &lt;a href=&quot;https://www.eclipse.org/che/technology/&quot;&gt;Eclipse Che&lt;/a&gt; which is a cloud native IDE framework (your workspace is composed of docker/container images). Che is a framework that helps you build Cloud Native IDEs too, for example, OpenShift.io is OpenShift integrated with Che to provide you a fully blown online development experience.&lt;/p&gt;
&lt;p&gt;Finally in 2018, I expect the developer experience of installing Kubernetes applications improved, including the underlying technology for doing so. For example, the &lt;a href=&quot;https://github.com/kubernetes-incubator/service-catalog&quot;&gt;Service Catalog&lt;/a&gt; work and websites like &lt;a href=&quot;https://kubeapps.com/&quot;&gt;kubeapps.com&lt;/a&gt; showcase what is possible in making it easier for people to install Kubernetes app/integrations, we’ll see this grow significantly in 2018. Also I predict that the Helm community will grow faster than it has before.&lt;/p&gt;
&lt;h4 style=&quot;text-align: left;&quot;&gt;Diversity and Inclusion&lt;/h4&gt;
&lt;p&gt;One of my favorite take aways from the conference was the focus on diversity and inclusion within our community:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;103 attendees here this week received diversity scholarships! This is the largest investment in diversity for ANY conference EVER — thanks to this incredible committee, &lt;a href=&quot;https://twitter.com/googlecloud?ref_src=twsrc%5Etfw&quot;&gt;@googlecloud&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/Azure?ref_src=twsrc%5Etfw&quot;&gt;@Azure&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/awscloud?ref_src=twsrc%5Etfw&quot;&gt;@awscloud&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://twitter.com/twistlockteam?ref_src=twsrc%5Etfw&quot;&gt;@twistlockteam&lt;/a&gt; &lt;img alt=&quot;👏🏼&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/2.3/72x72/1f44f-1f3fc.png&quot; style=&quot;height: 1em;&quot; /&gt; [LIVE from &lt;a href=&quot;https://twitter.com/hashtag/KubeCon?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#KubeCon&lt;/a&gt; + &lt;a href=&quot;https://twitter.com/hashtag/CloudNativeCon?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#CloudNativeCon&lt;/a&gt;] &lt;a href=&quot;https://t.co/GtxNCjb1g5&quot;&gt;pic.twitter.com/GtxNCjb1g5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— CNCF (@CloudNativeFdn) &lt;a href=&quot;https://twitter.com/CloudNativeFdn/status/938435795022745600?ref_src=twsrc%5Etfw&quot;&gt;December 6, 2017&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;We (thank you amazing diversity committee) raised $250,000 and helped over 100 diversity scholarship recipients attend KubeCon/CloudNativeCon in Austin. In 2018, I predict and truly hope some other event will match or beat this.&lt;/p&gt;
&lt;p&gt;Anyways, after a crazy 2017, I can’t wait to grow our communities in 2018.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</description>
	<pubDate>Tue, 16 Jan 2018 04:48:53 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: EE4J Code Arrives</title>
	<guid isPermaLink="false">http://mmilinkov.wordpress.com/?p=1419</guid>
	<link>https://mmilinkov.wordpress.com/2018/01/15/ee4j-code-arrives/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Last week the EE4J project achieved an important milestone when the source code for the API and reference implementation of JSON-P JSR-374 project was pushed by &lt;/span&gt;&lt;a href=&quot;https://github.com/m0mus&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Dmitry Kornilov&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; into its &lt;/span&gt;&lt;a href=&quot;https://github.com/eclipse-ee4j/jsonp&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;GitHub repository&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; in the EE4J organization. This is the first project of the &lt;/span&gt;&lt;a href=&quot;https://mmilinkov.wordpress.com/2017/11/21/ee4j-progress-nine-new-projects-proposed-at-the-eclipse-foundation/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;initial nine proposed&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; to reach this stage.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This may seem like a small step in a very large process, but it is a concrete demonstration of the commitment to move forward with the &lt;/span&gt;&lt;a href=&quot;https://blogs.oracle.com/theaquarium/opening-up-ee-update&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;migration of Java EE to the Eclipse Foundation&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;. The Oracle team and the Eclipse Foundation staff had a ton of work to do to make this possible. This is definitely one of those cases where the visible code contributions are just the visible tip of an iceberg’s worth of effort.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Here are just a few examples of the work that went on to get to this stage:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The names of the projects such as Glassfish represent important trademarks in the industry. Oracle transferred ownership of these project names to the Eclipse Foundation so that they can be held and protected for the community. &lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The EMO staff reviewed the projects proposals, ran the project creation review, provisioned the repositories and set up the committer lists.&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The Oracle team packaged up the source code and updated the file headers to reflect the new EPL-2.0 licensing.&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The EMO IP staff scanned the code and ensured that all was well before approving it for initial check-in.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Now that the collective team has run through this process with JSON-P we will be working to get the remaining eight initial projects pushed out as quickly as possible. Hopefully by the end of this month. Meanwhile, more projects will be proposed and we will be migrating a steady stream of Java EE projects into EE4J.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Exciting times!&lt;/span&gt;&lt;/p&gt;</description>
	<pubDate>Mon, 15 Jan 2018 16:51:40 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse IoT Day Santa Clara 2018 | Call for Papers</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/m-u4xUFGRYE/</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/m-u4xUFGRYE/</link>
	<description>We're happy to announce the Eclipse IoT Day Santa Clara, taking place May 14, in co-location with IoT World 2018.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/m-u4xUFGRYE&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 15 Jan 2018 14:15:00 +0000</pubDate>
</item>
<item>
	<title>itemis: Machine Learning Formatting with Xtext: Part II</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/machine-learning-formatting-part-ii</guid>
	<link>https://blogs.itemis.com/en/machine-learning-formatting-part-ii</link>
	<description>&lt;p&gt;Hi folks! Some of you might have seen my earlier &lt;a href=&quot;https://hosting.itemis.de/en/machine-learning-formatting-with-xtext&quot;&gt;blogpost&lt;/a&gt; on Machine Learning Formatting. It was more or less meant as an advertiser for the Eclipse Democamp Munich. As promised, here comes the follow up blogpost with more details.&lt;/p&gt;  
&lt;p&gt;&lt;a href=&quot;https://github.com/antlr/codebuff&quot;&gt;Codebuff&lt;/a&gt; is a project started by &lt;a href=&quot;https://github.com/parrt&quot;&gt;Terrence Parr&lt;/a&gt;. The project aims the problem that writing a codeformatter is hard and will not fit all needs. Therefore people want to customize it in every way since formatting is a very individual thing.&lt;/p&gt; 
&lt;p&gt;Codebuff tries to format code by taking already formatted examples and learning out of that how to format code based on the same grammar. To do that it needs the corresponding lexer and parser. The lexer is used to get the tokens and the parser to create an abstract syntax tree out of the tokens. Based on that information &lt;span style=&quot;background-color: transparent;&quot;&gt;Codebuff tries to mimics the behavior of a developer. &lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Sounds simple, but how does that work?  &lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;First of all code consists of tokens.&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;tokens.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/tokens.png?t=1515762170520&amp;amp;width=495&amp;amp;name=tokens.png&quot; style=&quot;width: 495px; display: block; margin-left: auto; margin-right: auto;&quot; width=&quot;495&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;Depending on tokens and the location a developer would normally make a decision to introduce or delete whitespaces. &lt;span&gt;A whitespace could be a simple space, a newline along with an indentation or alignment.&lt;span&gt; Another valid decision could also be to do nothing. &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;To make a decision you need certain criteria. Codebuff works with 21&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;criterias, so called features &lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;that are taken into account. The following figure shows the 5 most obvious &lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;features&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;.&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Bildschirmfoto 2017-12-19 um 16.26.00.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Bildschirmfoto%202017-12-19%20um%2016.26.00.png?t=1515762170520&amp;amp;width=468&amp;amp;name=Bildschirmfoto%202017-12-19%20um%2016.26.00.png&quot; style=&quot;width: 468px; display: block; margin-left: auto; margin-right: auto;&quot; width=&quot;468&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br /&gt;Based on those 21 &lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;features&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt; Codebuff analyses the given examples and computes token properties.&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Bildschirmfoto 2017-12-21 um 14.56.14.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Bildschirmfoto%202017-12-21%20um%2014.56.14.png?t=1515762170520&amp;amp;width=471&amp;amp;name=Bildschirmfoto%202017-12-21%20um%2014.56.14.png&quot; style=&quot;width: 471px; display: block; margin-left: auto; margin-right: auto;&quot; width=&quot;471&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br /&gt;When training is done all token properties are stored as vectors in a matrix along with the whitespace information.&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;img alt=&quot;Matrix.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Matrix.png?t=1515762170520&amp;amp;width=265&amp;amp;name=Matrix.png&quot; style=&quot;width: 265px; display: block; margin-left: auto; margin-right: auto;&quot; width=&quot;265&quot; /&gt; 
&lt;div&gt;
 &lt;br /&gt; 
 &lt;p&gt;&lt;br /&gt;From this point on we should start to speak about &lt;a href=&quot;https://en.wikipedia.org/wiki/Machine_learning&quot;&gt;machine learning&lt;/a&gt;. What we want to achieve is finding a match in the computed &lt;span&gt;matrix of &lt;/span&gt;token properties and get the whitespace to inject into the given document at a certain position.&lt;/p&gt; 
 &lt;p&gt;First of all we have to compute where to look at in the examples. For that reason we look at our current position in the document and compute the token property (vector) like we did it in the training without storing it to the matrix.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;Vector.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Vector.png?t=1515762170520&amp;amp;width=178&amp;amp;name=Vector.png&quot; style=&quot;width: 178px; display: block; margin: 0px auto;&quot; width=&quot;178&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span&gt;&lt;br /&gt;Now that we have that vector we need an algorithm to find a match in the matrix and apply the right whitespace to the document.&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;img alt=&quot;Format.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Format.png?t=1515762170520&amp;amp;width=470&amp;amp;name=Format.png&quot; style=&quot;display: block; margin-left: auto; margin-right: auto; width: 470px;&quot; width=&quot;470&quot; /&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br /&gt;For doing that Codebuff uses the simplest machine learning algorithm that exists – the &lt;/span&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm&quot;&gt;K-nearest neighbors algorithm&lt;/a&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;. &lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;The algorithm uses a function to compare a token property to the entries of the existing training-matrix. To do that the a constant named k needs to be specified to define how many nearest neighbors should be used. Mostly k is computed once by taking the root of the number of examples in the corpus, but for Codebuff k is fixed to 11.&lt;br /&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;Bildschirmfoto 2018-01-03 um 16.19.08.png&quot; height=&quot;393&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Bildschirmfoto%202018-01-03%20um%2016.19.08.png?t=1515762170520&amp;amp;width=590&amp;amp;height=393&amp;amp;name=Bildschirmfoto%202018-01-03%20um%2016.19.08.png&quot; style=&quot;display: block; margin-left: auto; margin-right: auto;&quot; width=&quot;590&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br /&gt;As shown above, experiments with different languages showed that the median error rate is nearly constant from k = 11 on, so taking this as a constant makes sense for performance reasons. &lt;/p&gt; 
 &lt;p&gt;As we now know the value of k, we can start to find most similar token properties to the one we just computed at the location to format.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;KNN.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/KNN.png?t=1515762170520&amp;amp;width=481&amp;amp;name=KNN.png&quot; style=&quot;width: 481px; display: block; margin-left: auto; margin-right: auto;&quot; width=&quot;481&quot; /&gt; &lt;/p&gt; 
 &lt;p&gt;Out of that the algorithm uses a function to weigh the best whitespace. In Codebuff it takes simply the whitespace that appears most often – very simple but efficient. Codebuff's theoretical background is explained in more depth &lt;a href=&quot;https://arxiv.org/pdf/1606.08866v1.pdf&quot;&gt;here&lt;/a&gt; and you can find an entertaining &lt;a href=&quot;https://www.youtube.com/watch?v=Mni2HVGGUdo&quot;&gt;talk by Terence on YouTube&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Mni2HVGGUdo&quot;&gt;.&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Looking at the way Codebuff works you might ask yourself how many example files you need to get good results? The answer is pretty simple: after a lot of experiments the Codebuff guys found out that from 10 example files on the results will not get better nor worst. The next figure shows for some different languages that after 10 files the error rate stays around the same.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;Bildschirmfoto 2017-12-21 um 15.18.06.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Bildschirmfoto%202017-12-21%20um%2015.18.06.png?t=1515762170520&amp;amp;width=481&amp;amp;name=Bildschirmfoto%202017-12-21%20um%2015.18.06.png&quot; style=&quot;width: 481px; display: block; margin-left: auto; margin-right: auto;&quot; width=&quot;481&quot; /&gt;&lt;/p&gt; 
 &lt;h2&gt;&lt;br /&gt;So – what has Codebuff to do with Xtext?&lt;/h2&gt; 
 &lt;p&gt;Now as we know a bit of the theoretical background around Codebuff you may wonder what all that stuff has to do with &lt;a href=&quot;https://www.eclipse.org/Xtext/&quot;&gt;Xtext&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;In Xtext you can create various DSLs for very different domains. For each language you need to specify a formatter. Luckily Xtext comes with two different APIs&lt;span style=&quot;background-color: transparent;&quot;&gt;. The older one relies on tokens only, that means you can define how your DSL should be formatted on a &lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;lexical level&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;. The newer API relies on the semantic model in addition. Depending on the state of the abstract syntax tree you can treat things different. Cool – but customization of your formatter is not coming out of the box and we know that formatting is an individual thing. So you would end up in a lot of effort to write a reasonable formatter and make customizations possible. Even when you did your best you will always find a special case that someone wants to treat differently. Codebuff sounds like a nice idea to solve that problem...&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;To marry Xtext and Codebuff together you don't need to do much. Ok – Xtext relies on AntLR 3 and bringing AntLR 4 on the classpath will take you into hell, but there is a pragmatic way around that.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;span style=&quot;text-align: center; background-color: transparent;&quot;&gt;DISCLAIMER: From this point on we are talking about a prototype – not ready for production!&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;First we wrote a so-called GeneratorFragment. To understand this you would have to understand how Xtext works under the covers, but for now let's just stay with the fact that Xtext generates it's DSL specific infrastructure out of the Xtext grammar and a GeneratorFragment is one piece of the overall generator.&lt;/p&gt; 
 &lt;p&gt;To come back to our issue – the GeneratorFragment needs to generate an AntLR 4 grammar. Out of that we need to generate the AntLR 4 lexer and parser. To do that we need the &lt;a href=&quot;https://github.com/antlr/antlr4/blob/master/tool/src/org/antlr/v4/Tool.java&quot;&gt;AntLR 4 generator&lt;/a&gt; but we are not allowed to bring that stuff on the classpath. Let's assume we managed to do that – how could we compile the generated code without AntLR 4 on the classpath? Even when we managed that we are not allowed to bring Codebuff on the classpath as it carries AntLR 4 under the covers. Even when we managed that – does Codebuff have an API that fits for us? The documentation just deals with a call of a main method with a bunch of parameters....&lt;/p&gt; 
 &lt;p&gt;Ok – step by step.&lt;/p&gt; 
 &lt;h2&gt;1. Generate the grammar&lt;/h2&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;The major difference between AntLR 3 and 4 is that AntLR 4 does not allow syntactic predicates anymore since it handles &lt;a href=&quot;https://en.wikipedia.org/wiki/Left_recursion&quot;&gt;left recursion&lt;/a&gt; now directly. AntLR 3 is not able to do that and for that reason grammars need to be left refactored. By doing that, syntactic predicates guide the parser on it's way to get rid of ambiguities and make decisions. The other thing is that the syntax has changed a bit from AntLR 3 to 4. Beside that Codebuff has a special need. Whitespaces and comments need to go to the hidden channel.&lt;/span&gt;&lt;/p&gt; 
 &lt;h2&gt;&lt;strong&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;2. Generate lexer and parser&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;p&gt;To achieve that we are downloading the necessary jar on demand once, like we already do it in Xtext for AntLR 3. To invoke the so called Tool of AntLR 4 we created a URLClassLoader that points to the jar. As Xtext uses AntLR 3 we need to leave the parent classloader empty to avoid confusions. After that we need to use reflection to call the right API.&lt;/p&gt; 
 &lt;p&gt;As a fun fact we observed that the AntLR 4 Tool has two methods to process a grammar and both produce lexer and parser - but they are not equal. After fighting with that situation we found out that the method &lt;code&gt;process&lt;/code&gt; is not the right choice as Codebuff got stuck with that the generated sources. &lt;code&gt;P&lt;span style=&quot;background-color: transparent;&quot;&gt;rocessGrammarsOnCommandLine &lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;produced the right result since it reorders the tokens by calling  &lt;/span&gt;&lt;code&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;sortGrammarByTokenVocab &lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;and then called &lt;code&gt;process&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Of course the generated classes are stored in a separated folder that is no source folder. Otherwise we would end up in compile errors in the project. ;-)&lt;/span&gt;&lt;/p&gt; 
 &lt;h2&gt;&lt;strong&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;3. Compile lexer and parser&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;We cannot simply compile the lexer and parser like the rest of the code since AntLR 4 is not on the classpath. To achieve compiling we used the &lt;/span&gt;&lt;code style=&quot;background-color: transparent; font-size: 16px;&quot;&gt;javax.tools.JavaCompiler &lt;/code&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;directly. To use it we need to bring referenced classes into a special classloader. For this use-case the AntLR 4 jar is enough. After that we need to handle in the files to compile - that's it. &lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Of course the compiled class files are stored in a separated folder as well. ;-)&lt;/span&gt;&lt;/p&gt; 
 &lt;h2&gt;&lt;strong&gt;4. Use Codebuff with the compiled classes without bringing it on the classpath&lt;/strong&gt;&lt;/h2&gt; 
 &lt;p&gt;To achieve that we used the same trick as for AntLR 4 and downloaded Codebuff on demand once. So we ended up in two jars, AntLR 4 and Codebuff, a grammar and compiled lexer and parser. Now we need to combine all those things.&lt;/p&gt; 
 &lt;p&gt;Codebuff does not really have an &lt;a href=&quot;https://github.com/antlr/codebuff/blob/master/src/org/antlr/codebuff/Tool.java&quot;&gt;API&lt;/a&gt; to use it somewhere else then the commandline. Normally the &lt;a href=&quot;https://github.com/antlr/codebuff/blob/master/src/org/antlr/codebuff/Tool.java&quot;&gt;Tool&lt;/a&gt; class needs a bunch of information including a destination file.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;Bildschirmfoto 2018-01-04 um 10.48.02.png&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog/Bildschirmfoto%202018-01-04%20um%2010.48.02.png?t=1515762170520&amp;amp;width=640&amp;amp;name=Bildschirmfoto%202018-01-04%20um%2010.48.02.png&quot; style=&quot;width: 640px; display: block; margin-left: auto; margin-right: auto;&quot; width=&quot;640&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br /&gt;The formatter API in Xtext does not write to a file directly. It needs to set the formatted text as a string. Because of that the given approach does not work for use. &lt;span style=&quot;background-color: transparent;&quot;&gt;We digged a bit in the code and yes there is a way that is slightly complicated and as you know we have to do everything through reflection ;-)&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;To explain it in a simple way we will just mention the steps without showing the ugly reflective code.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;We need to instantiate a &lt;code&gt;org.antlr.codebuff.misc.LangDescriptor&lt;/code&gt; that holds all necessary information about the language. That includes the folder of the examples, a regex to identify examples, the compiled lexer and parser, the root rule of the grammar, the amount of spaces that make an indentation and the rule for comments.&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;We need to load all examples to invoke the train method that fills the matrix with token properties.&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;We need to parse the document that we want to format.&lt;/li&gt; 
  &lt;li&gt;We need to instantiate the formatter and fill in the necessary information including the training result.&lt;/li&gt; 
  &lt;li&gt; We need to invoke the formatter to get a string back that represents the formatted document.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;br /&gt;Sounds simple but we have to admit that it was pain. If Codebuff would have a more user friendly API, it would have been much simpler – we are planning to create a pullrequest to Codebuff to make it easier.&lt;/p&gt; 
 &lt;p&gt;On Xtext side the story is simple – we need to bind a &lt;code&gt;org.eclipse.xtext.ui.editor.formatting.IContentFormatterFactory&lt;/code&gt; to create our &lt;code&gt;org.eclipse.jface.text.formatter.IContentFormatter&lt;/code&gt; that has only one method that gets the document that holds all necessary information and we can directly set the new formatted text.&lt;/p&gt; 
 &lt;p&gt;The only tricky part that is left is classloading. We need to have Codebuff, AntLR4 and the compiled lexer and parser in a classloader. Of course a URLClassLoader solves the problem as we already downloaded the necessary jars and compiled the lexer and parser.&lt;/p&gt; 
 &lt;p&gt;As a wrap up we can say that Codebuff creates a nice way to get rid of an old problem – but it's not perfect. For the future of Xtext it would be nice to have something like that included. Currently we are looking into alternative approaches and enhancements of the existing Codebuff codebase. Stay tuned.&lt;/p&gt; 
&lt;/div&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fmachine-learning-formatting-part-ii&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 12 Jan 2018 11:12:00 +0000</pubDate>
	<author>schill@itemis.com (Holger Schill)</author>
</item>
<item>
	<title>Orion: Announcing Orion 17</title>
	<guid isPermaLink="false">http://planetorion.org/news/?p=910</guid>
	<link>http://planetorion.org/news/2018/01/announcing-orion-17/</link>
	<description>&lt;p&gt;We are pleased to announce the seventeenth release of Orion, “Your IDE in the Cloud”. You can run it now at &lt;a href=&quot;https://orionhub.org/&quot;&gt;OrionHub,&lt;/a&gt; from &lt;a href=&quot;https://www.npmjs.com/package/orion&quot;&gt;NPM&lt;/a&gt; or &lt;a href=&quot;http://download.eclipse.org/orion/drops/R-17.0-201801111044/index.html&quot;&gt;download the server&lt;/a&gt; to run your own instance locally.&lt;/p&gt;
&lt;p&gt;Once again, thank you to all committers and contributors for your hard work this release. There were 86 bugs and enhancements fixed, across 248 commits from 13 authors!&lt;/p&gt;
&lt;p&gt;This release was focussed entirely on making compatibility, stability and overall quality improvements to the Node.js server.&lt;/p&gt;</description>
	<pubDate>Thu, 11 Jan 2018 18:52:41 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: German TUV Sud Joins Eclipse openPASS Working Group</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/2K_LU5LxqMs/OpenPASS-WG</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/2K_LU5LxqMs/OpenPASS-WG</link>
	<description>On Jan 1, 2018 the German TUV Sud has joined as a new member of the Eclipse Foundation &amp;amp; Eclipse openPASS Working Group.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/2K_LU5LxqMs&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 11 Jan 2018 16:10:00 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: SWT Spy – debugging SWT layouts</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=37780</guid>
	<link>https://eclipsesource.com/blogs/2018/01/10/swt-spy-debugging-swt-layouts/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Do you have to debug an existing SWT view and you are not sure what elements are really on screen? Are you tired of manually coloring composites to find out what’s wrong in your layout?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;It is time to remember an oldie but goodie: The SWT spy!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;It is a fairly old tool, but still very useful, so let us have a quick look.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Spy can augments a running tool and provide valuable information to debug any SWT application. This can be the IDE in case you are a plugin developer or any RCP or Eclipse 4 application. You can get SWT spy from this location:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;http://download.eclipse.org/eclipse/updates/4.7&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Either add it to your target platform or directly install it into your IDE.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In case you install SWT spy into the IDE, you can open it by pressing:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;SHIFT+CTRL+ALT+F9&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If you would like to use SWT spy in a custom application, you need to include the bundle “org.eclipse.tools.layout.spy” into your product. To trigger the spy, there are two options:&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If you run on the compatibility layer (3.x), the key binding will also work&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If you are running on Eclipse 4, you can embed the following code to open the SWT spy window:&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;EnlighterJSRAW&quot;&gt;final LayoutSpyDialog popupDialog = new LayoutSpyDialog(shell);
popupDialog.open();&lt;/pre&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The SWT spy will open as a separate dialog, which is connected to the running application. It allows for the inspection of any SWT element with a focus on layout information. To navigate you can either browse the hierarchy or directly jump to an element. The hierarchy is shown as a list on the left side. By double clicking on an element within the current container you will walk down the SWT widget tree, the button on the top left corner will send you one level up. To jump to a specific element, click the button “Select Control” and hover over any element in the running application. A yellow border will help you with the selection. If you check the option “Show overlay”, SWT spy will draw a yellow border around the currently selected element.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone wp-image-37781 size-full&quot; height=&quot;393&quot; src=&quot;https://eclipsesource.com/wp-content/uploads/2018/01/image2.jpg&quot; width=&quot;1193&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The text field on the right side shows the layout data of the current parent composite. If you select an element on the left, you see its layout data in the text field below. This is very helpful to debug layouts. Furthermore, you can use existing layouts as a template. The SWT spy directly shows you how to create the layout data for a selected element, e.g.&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;EnlighterJSRAW&quot;&gt;GridDataFactory.fillDefaults()
    .grab(true, false)
    .align(SWT.FILL, SWT.BEGINNING)
    .minSize(0, 0)
    .hint(107, SWT.DEFAULT)&lt;/pre&gt;
&lt;p&gt;&lt;span&gt;During our work on &lt;/span&gt;&lt;a href=&quot;http://emfforms.org&quot;&gt;&lt;span&gt;EMF Forms&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, we often develop or adapt renderers. The goal of EMF Forms is to ease the creation of forms, especially concerning the layout. However, before this can happen, you must first create a renderer which will take care of the layout for you. EMF Forms ships with default layouts, but you might want to adapt them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;When debugging the layout of a combination of renderers, it is often helpful to visualize all elements, which are on screen. Sometimes, elements are not visible (e.g. composites) or have the same background color as their parent. For this purpose, the SWT spy allows you to color controls. If you check the option “Color controls …”, the spy will assign different background colors to each level in your widgets tree. This looks ugly, but is helpful in finding hidden composites or to see how much space certain elements occupy.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone wp-image-37782 size-full&quot; height=&quot;270&quot; src=&quot;https://eclipsesource.com/wp-content/uploads/2018/01/image1.jpg&quot; width=&quot;735&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 10 Jan 2018 13:28:45 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: RHAMT Eclipse Plugin 4.0.0.Final has been released!</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/windup_4.0.0.ga_release.html</guid>
	<link>https://tools.jboss.org/blog/windup_4.0.0.ga_release.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are happy to announce the latest release of the Red Hat Application Migration Toolkit (RHAMT) Eclipse Plugin.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;getting-started&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#getting-started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is now available through JBoss Central, and from the update site &lt;a href=&quot;http://download.jboss.org/jbosstools/oxygen/stable/updates/rhamt/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-rhamt&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#what-is-rhamt&quot;&gt;&lt;/a&gt;What is RHAMT?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;RHAMT is an automated application migration and assessment tool.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Example ways to RHAMT up your code:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Moving your application from WebLogic to EAP, or WebSphere to EAP&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Version upgrade from Hibernate 3 to Hibernate 4, or EAP 6 to EAP 7&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Change UI technologies from Seam 2 to pure JSF 2.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;An example of how to run the RHAMT CLI:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;code&gt;$ ./rhamt-cli --input /path/to/jee-example-app-1.0.0.ear --output /path/to/output --source weblogic --target eap:7&lt;/code&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The output is a report used to assess and prioritize migration and modernization efforts.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;the-rhamt-eclipse-plugin-what-does-it-do&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#the-rhamt-eclipse-plugin-what-does-it-do&quot;&gt;&lt;/a&gt;The RHAMT Eclipse Plugin - What does it do?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Consider an application migration comprised of thousands of files, with a myriad of small changes, not to mention the tediousness of switching between
       the report and your IDE. Who wants to be the engineer assigned to that task? :)
      Instead, this tooling marks the source files containing issues, making it easy to organize, search, and in many cases automatically fix issues using quick fixes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let me give you a quick walkthrough.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-wizard&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#ruleset-wizard&quot;&gt;&lt;/a&gt;Ruleset Wizard&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We now have quickstart template code generators.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Rueset Wizard&quot; src=&quot;http://tools.jboss.org/blog/images/rhamt/ruleset_wizard.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;rule-creation-from-code&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#rule-creation-from-code&quot;&gt;&lt;/a&gt;Rule Creation From Code&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have also added rule generators for selected snippets of code.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Rule Generation From Source&quot; src=&quot;http://tools.jboss.org/blog/images/rhamt/type_implements.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-graphical-editor&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#ruleset-graphical-editor&quot;&gt;&lt;/a&gt;Ruleset Graphical Editor&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Ruleset navigation and editing is faster and more intuitive thanks to the new graphical editor.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Graphical Editor&quot; src=&quot;http://tools.jboss.org/blog/images/rhamt/ruleset_editor.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-view&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#ruleset-view&quot;&gt;&lt;/a&gt;Ruleset View&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have created a view dedicated to the management of rulesets. Default rulesets shipped with RHAMT can now be opened, edited, and referenced while authoring
      your own custom rulesets.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Ruleset View&quot; src=&quot;http://tools.jboss.org/blog/images/rhamt/ruleset_view.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;run-configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#run-configuration&quot;&gt;&lt;/a&gt;Run Configuration&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Eclipse plugin interacts with the RHAMT CLI process, thereby making it possible to specify command line options and custom rulesets.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Run Configuration&quot; src=&quot;http://tools.jboss.org/blog/images/rhamt/run_configuration.gif&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;ruleset-submission&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#ruleset-submission&quot;&gt;&lt;/a&gt;Ruleset Submission&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Lastly, contribute your custom rulesets back to the community from within the IDE.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Ruleset Submission&quot; src=&quot;http://tools.jboss.org/blog/images/rhamt/ruleset_submission.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more detailed information &lt;a href=&quot;https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Our goal is to make the RHAMT tooling easy to use. We look forward to your feedback and comments!&lt;br /&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Have fun!&lt;br /&gt;
      John Steele&lt;br /&gt;
      &lt;a href=&quot;https://github.com/johnsteele/&quot;&gt;github/johnsteele&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 10 Jan 2018 07:42:24 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Hazelcast Joins the Eclipse Foundation</title>
	<guid isPermaLink="true">http://www.infoq.com/news/2018/01/hazelcast-joins-eclipse?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>http://www.infoq.com/news/2018/01/hazelcast-joins-eclipse?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;http://www.infoq.com/styles/i/logo_bigger.jpg&quot; /&gt;&lt;p&gt;Hazelcast, a provider in open source In-Memory Data Grid (IMDG), recently joined the Eclipse Foundation to work with the other members of the Eclipse community to mainly focus on JCache, Eclipse MicroProfile, and EE4J. Greg Luck, CEO at Hazelcast, spoke to InfoQ about Hazelcast joining the Eclipse Foundation.
&lt;/p&gt; &lt;i&gt;By Michael Redlich&lt;/i&gt;</description>
	<pubDate>Tue, 09 Jan 2018 14:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Eclipse Collections 9.1 Released</title>
	<guid isPermaLink="false">https://medium.com/p/24c413d200ec</guid>
	<link>https://medium.com/@donraab/eclipse-collections-9-1-released-24c413d200ec?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;New Features, more languages, better symmetry and other improvements&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*ZgPZPNVLMlletjZogDJ76w.png&quot; /&gt;&lt;/figure&gt;&lt;blockquote&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; is a collections framework for Java. It has optimized List, Set and Map implementations with a rich and fluent API. The library provides additional data structures not found in the JDK like Bags, Multimaps and BiMaps. The framework also provides primitive versions of Lists, Sets, Bags, Stacks and Maps with a rich and fluent API. There is support for both Mutable and Immutable versions of all containers in the library.&lt;/blockquote&gt;&lt;p&gt;The Eclipse Collections community continues to grow. There were ten developers who contributed to the Eclipse Collections 9.1.0 release. I want to thank everyone who made a contribution. If this was your first contribution to an open source project, congratulations and welcome!&lt;/p&gt;&lt;p&gt;The release notes for Eclipse Collections 9.1.0 are here:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/releases/tag/9.1.0&quot;&gt;eclipse/eclipse-collections&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;Multi-language Website&lt;/h4&gt;&lt;p&gt;In addition to code contributions, several developers worked on translating our Eclipse Collections Website to other spoken languages. This is an amazing example of how you can use more than just your coding skills to help open source projects. Thank you to both the contributors and reviewers!&lt;/p&gt;&lt;p&gt;Here are our website links:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.eclipse.org/collections/&quot;&gt;English&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.eclipse.org/collections/ja/index.html&quot;&gt;Japanese&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.eclipse.org/collections/ru/index.html&quot;&gt;Russian&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.eclipse.org/collections/pt-br/index.html&quot;&gt;Brazilian Portuguese&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A Chinese translation is in the works, and we will be looking to add other languages in the future. Please feel to submit an issue or pull request if you’d like to work on a translation to a spoken language you are fluent in.&lt;/p&gt;&lt;h4&gt;The Eclipse Collections Katas&lt;/h4&gt;&lt;p&gt;Both of the Eclipse Collections katas are now available in &lt;a href=&quot;https://revealjs.com/#/&quot;&gt;Reveal.js&lt;/a&gt; as of this release.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://eclipse.github.io/eclipse-collections-kata/company-kata/#/&quot;&gt;Company Kata&lt;/a&gt; (&lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata/blob/master/docs/company-kata/slides.md&quot;&gt;markdown file&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://eclipse.github.io/eclipse-collections-kata/pet-kata/#/&quot;&gt;Pet Kata&lt;/a&gt; (&lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata/blob/master/docs/pet-kata/slides.md&quot;&gt;markdown file&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We also had our first ever contribution of a live video demonstration of the Eclipse Collections Pet Kata using Eclipse Oxygen presented in Brazilian Portuguese. Great work and thank you Leo!&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=1TH0tdU_esQ&quot;&gt;https://www.youtube.com/watch?v=1TH0tdU_esQ&lt;/a&gt;&lt;/p&gt;&lt;p&gt;It would be great to have multi-language translations of our katas as well. Our katas are hosted now as simple markdown files which get translated to web based slides using &lt;a href=&quot;https://revealjs.com/#/&quot;&gt;Reveal.js&lt;/a&gt;. Feel free to submit a pull request if you’d like to translate the katas to another spoken language.&lt;/p&gt;&lt;h4&gt;New Collectors&lt;/h4&gt;&lt;p&gt;Several new Collector implementations were added to the Collectors2 utility class in this release. We continue to look to provide good integration between the Streams library and Eclipse Collections. Here’s an example of using the new &lt;em&gt;countBy&lt;/em&gt; Collector with a Stream of String.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void countBy()&lt;br /&gt;{&lt;br /&gt;    Stream&amp;lt;String&amp;gt; stream = Stream.&lt;em&gt;of&lt;/em&gt;(&lt;br /&gt;            &lt;strong&gt;&quot;One&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Two&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;two&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Three&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;three&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;tHrEe&quot;&lt;/strong&gt;);&lt;br /&gt;&lt;br /&gt;    Bag&amp;lt;String&amp;gt; counts =&lt;br /&gt;            stream.collect(&lt;br /&gt;                    Collectors2.&lt;em&gt;countBy&lt;/em&gt;(String::toLowerCase));&lt;br /&gt;&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(1, counts.occurrencesOf(&lt;strong&gt;&quot;one&quot;&lt;/strong&gt;));&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(2, counts.occurrencesOf(&lt;strong&gt;&quot;two&quot;&lt;/strong&gt;));&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(3, counts.occurrencesOf(&lt;strong&gt;&quot;three&quot;&lt;/strong&gt;));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;You can now consider using the &lt;em&gt;countBy&lt;/em&gt; Collector as an alternative to using the &lt;em&gt;groupingBy&lt;/em&gt; and &lt;em&gt;counting&lt;/em&gt; alternative from the JDK shown below.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void groupingByCounting()&lt;br /&gt;{&lt;br /&gt;    Stream&amp;lt;String&amp;gt; stream = Stream.&lt;em&gt;of&lt;/em&gt;(&lt;br /&gt;            &lt;strong&gt;&quot;One&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Two&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;two&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;Three&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;three&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;tHrEe&quot;&lt;/strong&gt;);&lt;br /&gt;&lt;br /&gt;    Map&amp;lt;String, Long&amp;gt; counts =&lt;br /&gt;            stream.collect(&lt;br /&gt;                    Collectors.&lt;em&gt;groupingBy&lt;/em&gt;(String::toLowerCase,&lt;br /&gt;                            Collectors.&lt;em&gt;counting&lt;/em&gt;()));&lt;br /&gt;&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(Long.&lt;em&gt;valueOf&lt;/em&gt;(1), counts.get(&lt;strong&gt;&quot;one&quot;&lt;/strong&gt;));&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(Long.&lt;em&gt;valueOf&lt;/em&gt;(2), counts.get(&lt;strong&gt;&quot;two&quot;&lt;/strong&gt;));&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(Long.&lt;em&gt;valueOf&lt;/em&gt;(3), counts.get(&lt;strong&gt;&quot;three&quot;&lt;/strong&gt;));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;There were also Collectors added for &lt;strong&gt;&lt;em&gt;groupByEach&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;groupByUniqueKey &lt;/em&gt;&lt;/strong&gt;on the &lt;strong&gt;&lt;em&gt;Collectors2&lt;/em&gt;&lt;/strong&gt; class in this release.&lt;/p&gt;&lt;h4&gt;&lt;a href=&quot;https://medium.com/@donraab/symmetric-sympathy-2c59d4541d60&quot;&gt;Symmetric Sympathy&lt;/a&gt; Continues&lt;/h4&gt;&lt;p&gt;You can now use &lt;em&gt;zip&lt;/em&gt; with primitive Lists. There are two varieties of zip for primitive Lists.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Zipping a primitive and an object List.&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;@Test&lt;br /&gt;public void zipPrimitiveWithObject()&lt;br /&gt;{&lt;br /&gt;    MutableList&amp;lt;IntObjectPair&amp;lt;String&amp;gt;&amp;gt; zipped =&lt;br /&gt;            IntLists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3)&lt;br /&gt;                    .zip(Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;one&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;two&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;three&quot;&lt;/strong&gt;));&lt;br /&gt;&lt;br /&gt;    List&amp;lt;IntObjectPair&amp;lt;String&amp;gt;&amp;gt; expected =&lt;br /&gt;            Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(1, &lt;strong&gt;&quot;one&quot;&lt;/strong&gt;),&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(2, &lt;strong&gt;&quot;two&quot;&lt;/strong&gt;),&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(3, &lt;strong&gt;&quot;three&quot;&lt;/strong&gt;));&lt;br /&gt;&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expected, zipped);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;2. Zipping two primitive Lists of the same type.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void zipIntToInt()&lt;br /&gt;{&lt;br /&gt;    MutableList&amp;lt;IntIntPair&amp;gt; zipped =&lt;br /&gt;            IntLists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3)&lt;br /&gt;                    .zipInt(IntInterval.&lt;em&gt;oneTo&lt;/em&gt;(3).asReversed());&lt;br /&gt;&lt;br /&gt;    List&amp;lt;IntIntPair&amp;gt; expected =&lt;br /&gt;            Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(1, 3),&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(2, 2),&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(3, 1));&lt;br /&gt;&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expected, zipped);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;There is a zip&amp;lt;Type&amp;gt; method for each primitive type. Here is an example of the &lt;em&gt;zipChar&lt;/em&gt; method available on &lt;em&gt;CharAdapter&lt;/em&gt;, which is an &lt;em&gt;ImmutableCharList&lt;/em&gt;. We can obtain a &lt;em&gt;CharAdapter&lt;/em&gt; now simply by using the new &lt;em&gt;Strings&lt;/em&gt; factory class.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void zipCharToChar()&lt;br /&gt;{&lt;br /&gt;    ImmutableList&amp;lt;CharCharPair&amp;gt; zipped =&lt;br /&gt;            Strings.&lt;em&gt;asChars&lt;/em&gt;(&lt;strong&gt;&quot;hello&quot;&lt;/strong&gt;)&lt;br /&gt;                    .zipChar(Strings.&lt;em&gt;asChars&lt;/em&gt;(&lt;strong&gt;&quot;hello&quot;&lt;/strong&gt;).asReversed());&lt;br /&gt;&lt;br /&gt;    List&amp;lt;CharCharPair&amp;gt; expected =&lt;br /&gt;            Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(&lt;strong&gt;'h'&lt;/strong&gt;, &lt;strong&gt;'o'&lt;/strong&gt;),&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(&lt;strong&gt;'e'&lt;/strong&gt;, &lt;strong&gt;'l'&lt;/strong&gt;),&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(&lt;strong&gt;'l'&lt;/strong&gt;, &lt;strong&gt;'l'&lt;/strong&gt;),&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(&lt;strong&gt;'l'&lt;/strong&gt;, &lt;strong&gt;'e'&lt;/strong&gt;),&lt;br /&gt;                    PrimitiveTuples.&lt;em&gt;pair&lt;/em&gt;(&lt;strong&gt;'o'&lt;/strong&gt;, &lt;strong&gt;'h'&lt;/strong&gt;));&lt;br /&gt;&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expected, zipped);&lt;br /&gt;}&lt;/pre&gt;&lt;h4&gt;Abandoning Symmetry for a better design&lt;/h4&gt;&lt;p&gt;Sometimes providing good symmetry may not be the best solution to a problem. There has been a method called &lt;em&gt;zipWithIndex&lt;/em&gt; available on Eclipse Collections object collections for a very long time. &lt;em&gt;ZipWithIndex&lt;/em&gt; was added before we had primitive collections in Eclipse Collections, so its return type unfortunately boxes an Integer for the index. I did not want to add a primitive version of of the same API. Instead, I added a new method to both object and primitive Lists (Symmetry!) called &lt;strong&gt;&lt;em&gt;collectWithIndex&lt;/em&gt;&lt;/strong&gt;. &lt;em&gt;CollectWithIndex&lt;/em&gt; can be used to implement &lt;em&gt;zipWithIndex &lt;/em&gt;by collecting to a &lt;em&gt;ObjectIntPair&lt;/em&gt;.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void whereIsZipWithIndex()&lt;br /&gt;{&lt;br /&gt;    MutableList&amp;lt;Pair&amp;lt;String, &lt;strong&gt;Integer&lt;/strong&gt;&amp;gt;&amp;gt; original =&lt;br /&gt;            Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;)&lt;br /&gt;                    .zipWithIndex();&lt;br /&gt;&lt;br /&gt;    MutableList&amp;lt;ObjectIntPair&amp;lt;String&amp;gt;&amp;gt; improved =&lt;br /&gt;            Lists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(&lt;strong&gt;&quot;1&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;2&quot;&lt;/strong&gt;, &lt;strong&gt;&quot;3&quot;&lt;/strong&gt;)&lt;br /&gt;                    .collectWithIndex(PrimitiveTuples::&lt;em&gt;pair&lt;/em&gt;);&lt;br /&gt;&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(&lt;br /&gt;            original.get(0).getTwo().intValue(),&lt;br /&gt;            improved.get(0).getTwo());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(&lt;br /&gt;            original.get(1).getTwo().intValue(),&lt;br /&gt;            improved.get(1).getTwo());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(&lt;br /&gt;            original.get(2).getTwo().intValue(),&lt;br /&gt;            improved.get(2).getTwo());&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;Ideally, &lt;em&gt;zipWithIndex&lt;/em&gt; would have returned &lt;em&gt;ObjectIntPair&lt;/em&gt;, but this type wasn’t available when the API was originally added. Since we don’t like breaking backwards compatibility on existing methods unless there is a very compelling reason to, we’ll probably never change the return type for &lt;em&gt;zipWithIndex&lt;/em&gt;. The &lt;em&gt;collectWithIndex&lt;/em&gt; method can return any type you want, not just a Pair. I believe &lt;em&gt;collectWithIndex&lt;/em&gt; will prove to be a more useful method than &lt;em&gt;zipWithIndex&lt;/em&gt; in the long run.&lt;/p&gt;&lt;h4&gt;And of there is more…&lt;/h4&gt;&lt;p&gt;Have a look at some of the other features listed in the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/releases/tag/9.1.0&quot;&gt;release notes&lt;/a&gt;. We look forward to seeing more contributors to Eclipse Collections in the future.&lt;/p&gt;&lt;p&gt;Happy New Year and have fun using Eclipse Collections 9.1 in your Java projects!&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=24c413d200ec&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 05 Jan 2018 19:39:34 +0000</pubDate>
</item>

</channel>
</rss>
