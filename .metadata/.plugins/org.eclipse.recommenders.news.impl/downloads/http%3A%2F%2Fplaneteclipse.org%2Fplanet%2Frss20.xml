<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/planet/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/planet/</description>

<item>
	<title>Donald Raab: EC by Example: Filtering</title>
	<guid isPermaLink="false">https://medium.com/p/4f14b906f718</guid>
	<link>https://medium.com/@donraab/ec-by-example-filtering-4f14b906f718?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Learn how to filter a collection using &lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/715/1*7C5g4RO3BSiqF-sYmUkyMA.png&quot; /&gt;&lt;/figure&gt;&lt;h3&gt;Filtering: Include or Exclude?&lt;/h3&gt;&lt;p&gt;If you have a singe method named filter, how do you know if it is supposed to be an inclusive or exclusive filter? In &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;, there are two filtering methods named &lt;em&gt;select&lt;/em&gt; and &lt;em&gt;reject&lt;/em&gt;.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/620/1*fvYTX5UYIjrRwx4Ptf48VQ.png&quot; /&gt;&lt;/figure&gt;&lt;h3&gt;Filtering an Object List&lt;/h3&gt;&lt;pre&gt;@Test&lt;br /&gt;public void filteringUsingSelectAndReject()&lt;br /&gt;{&lt;br /&gt;    ExecutorService executor = Executors.&lt;em&gt;newWorkStealingPool&lt;/em&gt;();&lt;/pre&gt;&lt;pre&gt;    MutableList&amp;lt;Integer&amp;gt; mList = &lt;em&gt;mList&lt;/em&gt;(1, 2, 3, 4, 5);&lt;br /&gt;    ImmutableList&amp;lt;Integer&amp;gt; iList = &lt;em&gt;iList&lt;/em&gt;(1, 2, 3, 4, 5);&lt;br /&gt;&lt;br /&gt;    Predicate&amp;lt;Integer&amp;gt; evens = i -&amp;gt; i % 2 == 0;&lt;/pre&gt;&lt;pre&gt;    MutableList&amp;lt;Integer&amp;gt; evensMutable = mList.select(evens);&lt;br /&gt;    ImmutableList&amp;lt;Integer&amp;gt; evensImmutable = iList.select(evens);&lt;/pre&gt;&lt;pre&gt;    LazyIterable&amp;lt;Integer&amp;gt; evensLazy = mList.asLazy().select(evens);&lt;/pre&gt;&lt;pre&gt;    ParallelListIterable&amp;lt;Integer&amp;gt; evensParallel =&lt;br /&gt;            mList.asParallel(executor, 2).select(evens);&lt;br /&gt;&lt;br /&gt;    ImmutableList&amp;lt;Integer&amp;gt; expectedEvens = &lt;em&gt;iList&lt;/em&gt;(2, 4);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedEvens, evensMutable);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedEvens, evensImmutable);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedEvens, evensLazy.toList());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedEvens, evensParallel.toList());&lt;br /&gt;&lt;br /&gt;    MutableList&amp;lt;Integer&amp;gt; oddsMutable = mList.reject(evens);&lt;br /&gt;    ImmutableList&amp;lt;Integer&amp;gt; oddsImmutable = iList.reject(evens);&lt;/pre&gt;&lt;pre&gt;    LazyIterable&amp;lt;Integer&amp;gt; oddsLazy = mList.asLazy().reject(evens);&lt;/pre&gt;&lt;pre&gt;    ParallelListIterable&amp;lt;Integer&amp;gt; oddsParallel =&lt;br /&gt;            mList.asParallel(executor, 2).reject(evens);&lt;br /&gt;&lt;br /&gt;    ImmutableList&amp;lt;Integer&amp;gt; expectedOdds = &lt;em&gt;iList&lt;/em&gt;(1, 3, 5);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedOdds, oddsMutable);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedOdds, oddsImmutable);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedOdds, oddsLazy.toList());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedOdds, oddsParallel.toList());&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;Filtering a primitive List&lt;/h3&gt;&lt;pre&gt;@Test&lt;br /&gt;public void filteringPrimitivesUsingSelectAndReject()&lt;br /&gt;{&lt;br /&gt;    MutableIntList mList = IntLists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4, 5);&lt;br /&gt;    ImmutableIntList iList = IntLists.&lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4, 5);&lt;/pre&gt;&lt;pre&gt;    IntPredicate evens = i -&amp;gt; i % 2 == 0;&lt;br /&gt;&lt;br /&gt;    MutableIntList evensMutable = mList.select(evens);&lt;br /&gt;    ImmutableIntList evensImmutable = iList.select(evens);&lt;/pre&gt;&lt;pre&gt;    LazyIntIterable evensLazy = mList.asLazy().select(evens);&lt;br /&gt;&lt;br /&gt;    MutableIntList expectedEvens = IntLists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(2, 4);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedEvens, evensMutable);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedEvens,  evensImmutable);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedEvens,  evensLazy.toList());&lt;br /&gt;&lt;br /&gt;    MutableIntList oddsMutable = mList.reject(evens);&lt;br /&gt;    ImmutableIntList oddsImmutable = iList.reject(evens);&lt;/pre&gt;&lt;pre&gt;    LazyIntIterable oddsLazy = mList.asLazy().reject(evens);&lt;br /&gt;&lt;br /&gt;    MutableIntList expectedOdds = IntLists.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 3, 5);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedOdds, oddsMutable);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedOdds,  oddsImmutable);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(expectedOdds,  oddsLazy.toList());&lt;br /&gt;}&lt;/pre&gt;&lt;h3&gt;What other types support Select and Reject?&lt;/h3&gt;&lt;p&gt;The &lt;a href=&quot;https://medium.com/@donraab/symmetric-sympathy-2c59d4541d60&quot;&gt;Symmetric Sympathy&lt;/a&gt; is strong with &lt;em&gt;select&lt;/em&gt; and &lt;em&gt;reject&lt;/em&gt;.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*IiWKcjSQPI_7ErSFbKuoOQ.png&quot; /&gt;Select and Reject is available across many types and concerns&lt;/figure&gt;&lt;h3&gt;Possible to filter both inclusively and exclusively in one iteration?&lt;/h3&gt;&lt;p&gt;Yes. There is a method called &lt;em&gt;partition&lt;/em&gt;. I will show &lt;em&gt;partition&lt;/em&gt; in the next blog in this series.&lt;/p&gt;&lt;h3&gt;APIs covered in the examples&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/RichIterable.html#select-org.eclipse.collections.api.block.predicate.Predicate-&quot;&gt;Select&lt;/a&gt; (&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/list/MutableList.html#select-org.eclipse.collections.api.block.predicate.Predicate-&quot;&gt;Eager&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/LazyIterable.html#select-org.eclipse.collections.api.block.predicate.Predicate-&quot;&gt;Lazy&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/list/ParallelListIterable.html#select-org.eclipse.collections.api.block.predicate.Predicate-&quot;&gt;Parallel&lt;/a&gt;) — filters &lt;strong&gt;&lt;em&gt;including&lt;/em&gt;&lt;/strong&gt; elements that match a condition&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/RichIterable.html#reject-org.eclipse.collections.api.block.predicate.Predicate-&quot;&gt;Reject&lt;/a&gt; (&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/list/MutableList.html#reject-org.eclipse.collections.api.block.predicate.Predicate-&quot;&gt;Eager&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/LazyIterable.html#reject-org.eclipse.collections.api.block.predicate.Predicate-&quot;&gt;Lazy&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/list/ParallelListIterable.html#reject-org.eclipse.collections.api.block.predicate.Predicate-&quot;&gt;Parallel&lt;/a&gt;) — filters &lt;strong&gt;&lt;em&gt;excluding&lt;/em&gt;&lt;/strong&gt; elements that match a condition&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/impl/factory/Iterables.html#mList-T...-&quot;&gt;mList&lt;/a&gt; — Creates a MutableList&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/impl/factory/Iterables.html#iList-T-T-T-T-T-&quot;&gt;iList&lt;/a&gt; — Creates an ImmutableList&lt;/li&gt;&lt;li&gt;IntLists.mutable.&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/factory/list/primitive/MutableIntListFactory.html#with-int...-&quot;&gt;with&lt;/a&gt; — Creates a MutableIntList&lt;/li&gt;&lt;li&gt;IntLists.immutable.&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/factory/list/primitive/ImmutableIntListFactory.html#with-int...-&quot;&gt;with&lt;/a&gt; — Creates an ImmutableIntList&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/RichIterable.html#asLazy--&quot;&gt;asLazy&lt;/a&gt; — Returns a LazyIterable or LazyIntIterable&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/list/ListIterable.html#asParallel-java.util.concurrent.ExecutorService-int-&quot;&gt;asParallel&lt;/a&gt; — Returns a ParallelIterable&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.1.0/org/eclipse/collections/api/RichIterable.html#toList--&quot;&gt;toList&lt;/a&gt; — Converts the target Iterable into a MutableList&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=4f14b906f718&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 15 Mar 2018 00:26:54 +0000</pubDate>
</item>
<item>
	<title>PapyrusUML: Taking a (Tu)Leap!</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=1071</guid>
	<link>https://papyrusuml.wordpress.com/2018/03/14/taking-a-tuleap/</link>
	<description>&lt;p&gt;&lt;img align=&quot;right&quot; alt=&quot;TuleapIcon&quot; height=&quot;25%&quot; src=&quot;https://www.tuleap.org/assets/img/logo-tuleap-flat-orange-white.svg&quot; width=&quot;25%&quot; /&gt; Thanks to &lt;a href=&quot;https://www.eclipse.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Eclipse&lt;/a&gt;, my &lt;a href=&quot;https://www.polarsys.org/papyrus-ic&quot;&gt;industry consortium&lt;/a&gt; is taking a leap into &lt;a href=&quot;https://www.enalean.com/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Enalean’s&lt;/a&gt; &lt;a href=&quot;https://www.tuleap.org/what-is-tuleap&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Tuleap&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Here are the three projects (communities) that have been created along with their descriptions, taken from each project:&lt;/p&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;2&quot; style=&quot;width: 100%;&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://tuleap.eclipse.org/projects/papyrus-ic&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Papyrus-IC&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://tuleap.eclipse.org/projects/papyrus-ic-product&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Papyrus-IC-Product&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://tuleap.eclipse.org/projects/papyrus-ic-steering&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Papyrus-IC Steering&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot;&gt;This project is the Papyrus IC’s way of openly managing the Papyrus projects and products This is our way of informing the Papyrus community about what we are doing and, in return, to get feedback from the Papyrus community. This is a source of information for the community and by the community — this is your community!&lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt; This project is where the Papyrus product line management lives. This is where we do the nitty-gritty work so that you can enjoy our fabulous Papyrus-based products. Unfortunately, most of what we do here can be boring, day-to-day stuff, and we want our developers, designers, and managers to keep their focus, so we keep them in a quiet, private area.&lt;br /&gt;
But don’t worry, any significant news, decision, development, etc. Will be made available in the &lt;a href=&quot;https://tuleap.eclipse.org/projects/papyrus-ic&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Papyrus IC project&lt;/a&gt;!&lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;This project is to help the Papyrus Industry Consortium’s Steering community to manage the consortium projects, products, and assets. This project is private to protect confidential information (e.g., user and supplier confidential information, financial information)&lt;br /&gt;
But don’t worry, Steering committee information for public consumption will be provided in the &lt;a href=&quot;https://tuleap.eclipse.org/projects/papyrus-ic&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Papyrus-IC project&lt;/a&gt;!&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;My minions are still working at the governance of the projects and at transferring information from the Papyrus IC Steering into the other projects (especially to &lt;strong&gt;&lt;a href=&quot;https://tuleap.eclipse.org/projects/papyrus-ic&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Papyrus-IC&lt;/a&gt;)&lt;/strong&gt;, so please be patient with them!&lt;/p&gt;
		&lt;div class=&quot;wpcnt&quot;&gt;
			&lt;div class=&quot;wpa wpmrec&quot;&gt;
				&lt;span class=&quot;wpa-about&quot;&gt;Advertisements&lt;/span&gt;
				&lt;div class=&quot;u&quot;&gt;		&lt;div style=&quot;padding-bottom: 15px; width: 300px; height: 250px; float: left; margin-right: 5px; margin-top: 0px;&quot;&gt;
		&lt;div id=&quot;atatags-26942-5aa9722e1dd12&quot;&gt;
			
		&lt;/div&gt;&lt;/div&gt;		&lt;div style=&quot;padding-bottom: 15px; width: 300px; height: 250px; float: left; margin-top: 0px;&quot;&gt;
		&lt;div id=&quot;atatags-114160-5aa9722e1dd4b&quot;&gt;
			
		&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
						&lt;div id=&quot;crt-2145738645&quot; style=&quot;width: 300px; height: 250px; display: none !important;&quot;&gt;&lt;/div&gt;
		&amp;amp;b		&lt;div id=&quot;crt-968313356&quot; style=&quot;width: 300px; height: 250px; display: none !important;&quot;&gt;&lt;/div&gt;
		&amp;amp;b
			&lt;/div&gt;
		&lt;/div&gt;</description>
	<pubDate>Wed, 14 Mar 2018 13:09:19 +0000</pubDate>
</item>
<item>
	<title>Vincent Zurczak: Testing Eclipse’s User Workflows: from OOMPH to Subversive, m2e and WTP</title>
	<guid isPermaLink="false">http://vzurczak.wordpress.com/?p=722</guid>
	<link>https://vzurczak.wordpress.com/2018/03/13/testing-eclipses-user-workflows-from-oomph-to-subversive-m2e-and-wtp/</link>
	<description>&lt;h2&gt;Goals&lt;/h2&gt;
&lt;p&gt;Few months ago, I worked on automating the tests of user workflows that involve Eclipse tooling. The client organization has more than a hundred of developers and they all use common frameworks based on JEE. They all use the same tools, from source version control to m2e and WTP. Eclipse being their IDE since quite a long time, they decided, some years ago, to automate the installation of Eclipse with preconfigured tools and predefined preferences. They did create their own solution. When OOMPH was released and became Eclipse’s official installer, they quickly dropped their project and adopted OOMPH.&lt;/p&gt;
&lt;p&gt;From an OOMPH’s point of view, this organization has its own catalog and custom setup tasks. Unlike what the installer usually shows, there is only one distribution. Everything works behind a proxy. Non-composite p2 repositories are proxyfied by Nexus. All the composite p2 repositories (such as official Eclips’s ones) are mirrored by using &lt;a href=&quot;https://blog.philipphauer.de/offline-copy-mirror-eclipse-p2-repository&quot;&gt;Eclipse in command-line&lt;/a&gt;. The installer shows a single product, but in different versions (e.g. Neon, Oxygen…). It also provides several projects: several JDKs, several versions of Tomcat, several versions of Maven, several Eclipse tools, etc. We can really say this organization uses all the features OOMPH provides.&lt;/p&gt;
&lt;p&gt;Here is a global overview of what is shown to users.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://vzurczak.files.wordpress.com/2018/03/dev1.png&quot;&gt;&lt;img alt=&quot;First screen in Eclipse's installer&quot; class=&quot;aligncenter size-medium wp-image-727&quot; height=&quot;207&quot; src=&quot;https://vzurczak.files.wordpress.com/2018/03/dev1.png?w=300&amp;amp;h=207&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://vzurczak.files.wordpress.com/2018/03/dev2.png&quot;&gt;&lt;img alt=&quot;Second screen in Eclipse's installer&quot; class=&quot;aligncenter size-medium wp-image-726&quot; height=&quot;226&quot; src=&quot;https://vzurczak.files.wordpress.com/2018/03/dev2.png?w=300&amp;amp;h=226&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, this organization is mostly a group of Eclipse users. Their developments are quite limited. Their focus is about delivering valid Eclipse distributions to their members and verify everything work correctly in their environment. Given this context, my job was to automate things: update sites creation (easy with Tycho), prepare the installer for the internal environement and automate tests that launch the installer, make a real installation, start the newly installed Eclipse, make it execute several actions a real developer would do and verify everything works correctly inside this (restrained / controlled) environment.&lt;/p&gt;
&lt;p&gt;Let’s take a look at the various parts.&lt;/p&gt;
&lt;h2&gt;Automating the creation of Custom Installers&lt;/h2&gt;
&lt;p&gt;This part is not very complicated.&lt;br /&gt;
I created &lt;a href=&quot;https://github.com/vincent-zurczak/customized-oomph-installer&quot;&gt;a project on GitHub&lt;/a&gt; that shows how it works. Basically, we have a Maven module that invokes ANT. The ANT script downloads the official installer binaries from &lt;a href=&quot;http://www.eclipse.org/&quot;&gt;Eclipse.org&lt;/a&gt;. It verifies the checksum, unwrap their content, update the &lt;strong&gt;eclipse-inst.ini&lt;/strong&gt; file, adds predefined preferences (related to the proxy) and rebuilds a package for users. To prevent downloading binaries everytime, we use a local cache (as a directory). If a binary already exists, we verify its checksum against the value provided by &lt;a href=&quot;http://www.eclipse.org/&quot;&gt;Eclipse.org&lt;/a&gt;. If it succeeds, it means our cache is valid against Eclipse repositories. Otherwise, it may indicate the cache is invalid and that a newer version was released. In such a situation, we indicate the user he (or she) should retry and/or delete the cache before giving it another try.&lt;/p&gt;
&lt;p&gt;Since all of this a Maven project, it is possible to deploy these installers on a Maven repository.&lt;/p&gt;
&lt;h2&gt;Automating OOMPH tests with SWT Bot&lt;/h2&gt;
&lt;p&gt;OOMPH is a SWT application.&lt;br /&gt;
So, testing it automatically immediately made sense thanks to SWT Bot. Testing with SWT Bot implies deploying it in the tested application. Fortunately, OOMPH is also a RCP application. It means we can install things with p2. That was the first thing to do. And since I enjoy the Maven + ANT combo, I wrote &lt;a href=&quot;https://github.com/vincent-zurczak/integration-tests-with-swt-bot/blob/master/tests-execution/tests-execution-installer/ant/library.xml&quot;&gt;an ANT script&lt;/a&gt; for this (inspired from the one available on Eclipse’s wiki – but much more simple). I also made the tasks reusable so that it can also deploy the bundle with the tests to run.&lt;/p&gt;
&lt;p&gt;The next step was writing a SWT Bot test and run it against the installer.&lt;br /&gt;
The first test was very basic. The real job was launching it. When one wants to run SWT Bot tests, it launches a custom application that itself launches Eclipse. Unfortunately, the usual &lt;strong&gt;org.eclipse.swtbot.eclipse.junit.headless.swtbottestapplication&lt;/strong&gt; application did not work. There are checks in it about the workbench. And even if OOMPH is a RCP and has SWT widgets, it does not have any workbench. This is why I created &lt;a href=&quot;https://github.com/vincent-zurczak/integration-tests-with-swt-bot/blob/master/test-plugins/net.vzurczak.eclipse.tests.installer/src/net/vzurczak/eclipse/tests/installer/setup/CustomSwtBotApplication.java&quot;&gt;a custom application&lt;/a&gt; I embedded with my SWT Bot test. Once there, everything was ready.&lt;/p&gt;
&lt;p&gt;1 – I have a bundle with SWT Bots tests. With a feature. With an update site (that can remain local, no need to deploy it anywhere).&lt;br /&gt;
2 – I have an ANT script that can install SWT Bot and my test bundle in OOMPH.&lt;br /&gt;
3 – I have &lt;a href=&quot;https://github.com/vincent-zurczak/integration-tests-with-swt-bot/blob/master/tests-execution/tests-execution-installer/ant/build.test.installer.xml&quot;&gt;an ANT script&lt;/a&gt; that can launch my custom SWT Bot application and executes my tests in OOMPH.&lt;/p&gt;
&lt;p&gt;It works. The skeleton for &lt;a href=&quot;https://github.com/vincent-zurczak/integration-tests-with-swt-bot&quot;&gt;the project is available on Github&lt;/a&gt;.&lt;br /&gt;
Otherwise, the shape and the Maven and ANT settings are the same. I only simplified the tests executed for OOMPH (they would not be meaningful for this article). The main test we wrote deploys Eclipse, but also downloads and unzip specific versions of Maven and Tomcat. Obviously, the catalog is made in such a way that installing these components also updates the preferences so that m2e and WTP can use them.&lt;/p&gt;
&lt;p&gt;Notice there are settings in the ANT script that delete user directories (OOMPH puts some resources and information in cache). To make tests reliable, it is better to delete them. This can be annoying if you have other Eclipse installations on your machine. In the end, such tests aim at being executed on a separate infrastructure, e.g. in continuous integration.&lt;/p&gt;
&lt;h2&gt;Configuring Eclipse for SWT Bot&lt;/h2&gt;
&lt;p&gt;Once the tests for the installer have run, we have a new Eclipse installation.&lt;br /&gt;
And we have other tests to run in it. Just like what we did for OOMPH, we have to install SWT Bot in it. The p2 director will help us once again.&lt;/p&gt;
&lt;p&gt;Notice we make this step separated from the execution of the tests themselves.&lt;br /&gt;
Testing OOMPH is quite easy. But the tests written for the IDE are much more complicated and we need to be able to re-run them. So, the configuration of the new Eclipse installation is apart from the tests execution.&lt;/p&gt;
&lt;h2&gt;Writing and Running Tests for Eclipse&lt;/h2&gt;
&lt;p&gt;In the same manner than for OOMPH, we have a custom plug-in that contains our tests for Eclipse. There is also a feature. and the (same) local update site. This plug-in is deployed along with SWT Bot. Launching the test is almost the same thing than for OOMPH, except there is a workbench here. We can rely on the usual SWT Bot application for Eclipse.&lt;/p&gt;
&lt;p&gt;What is more unusual is the kind of test we run here.&lt;br /&gt;
I will give you an example. We have a test that…&lt;/p&gt;
&lt;p&gt;1. … waits for OOMPH to intialize the workspace (based on the projects selected during the setup – this step is common to all our tests).&lt;br /&gt;
2. … opens the SVN perspective&lt;br /&gt;
3. … declares a new repository&lt;br /&gt;
4. … checks out the last revision&lt;br /&gt;
5. … lets m2eclipse import the projects (it is a multi-module project and m2e uses a custom settings.xml)&lt;br /&gt;
6. … applies a Maven profile on it&lt;br /&gt;
7. … waits for m2eclipse to download (many) artifacts from the organization’s Nexus&lt;br /&gt;
8. … waits for the compilation to complete&lt;br /&gt;
9. … verifies there is no error on the project&lt;br /&gt;
10. … deploys it on the Tomcat server that was installed by OOMPH (through WTP – &lt;strong&gt;Run as &amp;gt; Run on Server&lt;/strong&gt; )&lt;br /&gt;
11. … waits for it to be deployed&lt;br /&gt;
12. … connects to the new web application (using a POST request)&lt;br /&gt;
13. … verifies the content of the page is valid.&lt;/p&gt;
&lt;p&gt;This test takes about 5 minutes to run. It implies Eclipse tools, pre-packaged ones too, but also environment solutions (Nexus, SVN server, etc). Unlike what SWT Bot tests usually do, we make integration tests with an environment that is hardly reproductable. It is not just more complex, it must also acknowledge some situations like timeouts or slowlyness. And as usual, there may be glitches in the user interface. As an example, projects resources that are managed by SVN have revision numbers and commit’s author names as a suffix. So, you cannot search resources by full label (hence the &lt;em&gt;TestUtils.findPartialLabel&lt;/em&gt; methods). Another example is that when one expands nodes in the SVN hierarchy, it may take some time for the child resources to by retrieved. Etc.&lt;/p&gt;
&lt;p&gt;But what was the most complicated was developing these tests.&lt;/p&gt;
&lt;h2&gt;Iterative Development of these Tests&lt;/h2&gt;
&lt;p&gt;Usually, SWT Bot tests are developed and tested from the developer’s workspace: right click on the test class, &lt;strong&gt;Run as &amp;gt; SWT Bot test&lt;/strong&gt;. It opens a new workbench and the test runs. That was not possible here. The Eclipse into which the tests must run is supposed to have been configured by OOMPH. You cannot compile the Maven project if you do not have the right settings.xml. You cannot deploy on Tomcat if it has not been declared in the server preferences. And you cannot set these preferences in the test itself because it is part of its job to verify OOMPH did it correctly! Again, it is not unit testing but integration testing. You cannot break the chain.&lt;/p&gt;
&lt;p&gt;This is why each test is defined in its own Maven profile.&lt;br /&gt;
To run scenario 1, we execute…&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot;&gt;mvn clean verify -P scenario1&lt;/pre&gt;
&lt;p&gt;We also added a profile that recompiles the SWT Bot tests and upgrade the plug-in in the Eclipse installation (the p2 directory can install and uninstall units at once). Therefore, if I modified a test, I can recompile, redeploy and run it by typing in…&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot;&gt;mvn clean verify -P recompile-ide-tests -P scenario1&lt;/pre&gt;
&lt;p&gt;This is far from being perfect, but it made the developement much less painful than going through the full chain on every change.&lt;br /&gt;
I wished I could have duplicated preferences from the current workspace when I run tests from Eclipse (even if it is clear other problems would have arisen). We had 4 important scenarios, and each one is managed separately, in the code and in the Maven configuration.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Let’s start with the personal feedback.&lt;br /&gt;
I must confess this project was challenging, despite a solid experience with Maven, Tycho and SWT Bot. The OOMPH part was not that hard (I only had to dig in SWT Bot and platform’s code). Testing the IDE itself, with all the involved components and the environment, was more complicated.&lt;/p&gt;
&lt;p&gt;Now, the real question is: what is worth the effort?&lt;br /&gt;
The answer is globally yes. The good parts are these tests can be run in a continuous integration workflow. That was the idea at the beginning. Even if it is not done (yet), that could (should) be a next step. I have spent quite some time to make these tests robust. I must have run them about a thousand times, if not more. And still sometimes, one can fail due to an environment glitch. This is also why we adopted the profile-per-scenario approach, to ease the construction of a build matrix and be able to validate scenarios separately and/or in parallel. It is also obvious that these tests run faster than by hand. An experienced tester spends about two hours to verify these scenarios manually. A novice will spend a day. Running the automated tests takes at most 30 minutes, provided you can read the docs and execute 5 succeeding Maven commands. And these tests can be declined over several user environments. So, this is globally positive.&lt;/p&gt;
&lt;p&gt;Now, there are few drawbacks. We did not go to the continuous integration. For the moment, releases will keep on being managed on-demand / on-schedule (so few times a year). In addition, everything that was done was for Linux systems. There would be minor adaptations to test the process on Windows (mainly, do not launch the same installer). We also found out minor differences between Eclipse versions. SWT Bot intensively uses labels. However, there are labels and buttons that have changed, as an example, between Neon and Oxygen. So, our tests do not work on every Eclipse version. The problem would remain if we tested by hand. Eventually, and unlike what it seems when you read them, the written tests remain complex to maintain. So, short and mid-term benefits might be counter-balanced by a new degree of complexity (easy to use, not so easy to upgrade). Tests by hand take time but remain understandable and manageable by many persons. Writting or updating SWT Bot tests require people to be well-trained and patient (did I mention I run IDE tests at least a thousand times?). Besides, having automated tests does not prevent from tracking tests on &lt;a&gt;TestLink&lt;/a&gt;. So, manual tests remain documented and maintained. In fact, not all the tests have been automated, only the main and most painful ones.&lt;/p&gt;
&lt;p&gt;Anyway, as usual, progress is made up of several steps. This work was one of them. I hope those facing the same issues will find help in this article and in the associated code samples.&lt;/p&gt;</description>
	<pubDate>Tue, 13 Mar 2018 18:23:36 +0000</pubDate>
</item>
<item>
	<title>vert.x project: Google Summer of Code 2018</title>
	<guid isPermaLink="true">http://vertx.io/blog/google-summer-of-code-2018</guid>
	<link>http://vertx.io/blog/google-summer-of-code-2018</link>
	<description>&lt;article&gt;&lt;p&gt;It’s this time of year again!
&lt;a href=&quot;https://summerofcode.withgoogle.com/&quot;&gt;Google Summer of Code&lt;/a&gt; 2018 submission period has just started!&lt;/p&gt;
&lt;h2 id=&quot;submit-through-the-eclipse-organization&quot;&gt;Submit through the Eclipse organization&lt;/h2&gt;
&lt;p&gt;This year, the Eclipse Vert.x project participates through the &lt;a href=&quot;https://summerofcode.withgoogle.com/organizations/6364590460370944/&quot;&gt;Eclipse organization&lt;/a&gt;.
Make sure to review our &lt;a href=&quot;https://wiki.eclipse.org/Google_Summer_of_Code_2018_Ideas#Eclipse_Vert.x&quot;&gt;GSoC 2018 ideas&lt;/a&gt; and to submit before March, 27!&lt;/p&gt;
&lt;h2 id=&quot;assessment-application&quot;&gt;Assessment application&lt;/h2&gt;
&lt;p&gt;As we did before, we ask candidates to &lt;a href=&quot;https://github.com/tsegismont/vertx-gsoc-2018-qotd&quot;&gt;implement a simple Vert.x application&lt;/a&gt;.
This helps us make sure candidates have a basic understanding of asynchronous programming and the Vert.x toolkit.
&lt;strong&gt;But submit your proposal even if not done with the assessment application!&lt;/strong&gt;
Google will not extend the submission period but we can continue reviewing assessments while evaluating the submitted proposals.&lt;/p&gt;
&lt;h2 id=&quot;questions-&quot;&gt;Questions?&lt;/h2&gt;
&lt;p&gt;If you have questions, feel free to ask possible mentors via email or on our &lt;a href=&quot;http://vertx.io/community&quot;&gt;community channels&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All the details for this year (and ideas from past years) can be found on the &lt;a href=&quot;http://vertx.io/gsoc&quot;&gt;Vert.x GSoC page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Looking forward to your proposals!&lt;/p&gt;
&lt;/article&gt;</description>
	<pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Last call for EclipseCon France submissions</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/cm9GR8xNOvQ/cfp</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/cm9GR8xNOvQ/cfp</link>
	<description>Deadline to propose a talk is Monday, March 19. Get your talk in now for your chance to be part of a great program!&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/cm9GR8xNOvQ&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 12 Mar 2018 21:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse Foundation supports EU funded Brain-IoT Project</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/R3tcGxMA3Ak/20180312-brainiot.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/R3tcGxMA3Ak/20180312-brainiot.php</link>
	<description>Eclipse Foundation Europe Selected to Provide Open Source Community Building Expertise for EU funded IoT Research Project&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/R3tcGxMA3Ak&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 12 Mar 2018 14:00:00 +0000</pubDate>
</item>
<item>
	<title>Holger Voormann: Hello OpenJ9 on Windows, I didn’t expect you so soon!</title>
	<guid isPermaLink="false">http://eclipsehowl.wordpress.com/?p=1376</guid>
	<link>https://eclipsehowl.wordpress.com/2018/03/09/hello-openj9-on-windows-i-didnt-expect-you-so-soon/</link>
	<description>&lt;p&gt;Faster startup time, lower memory footprint and higher application throughput only by replacing the Java virtual machine (VM)? That sounds too good to be true. So far there has been no real alternative to &lt;a href=&quot;http://openjdk.java.net/groups/hotspot/&quot;&gt;Oracle’s Java HotSpot VM&lt;/a&gt; on Windows. With &lt;a href=&quot;http://www.eclipse.org/openj9/&quot;&gt;Eclipse OpenJ9&lt;/a&gt;, which emerged from open-sourcing IBM’s J9 VM, there is now the alternative that promises exactly this.&lt;/p&gt;
&lt;p&gt;At the end of January the first OpenJDK 9 with Eclipse OpenJ9 nightly builds for Windows were published, but they &lt;a href=&quot;https://twitter.com/howlger/status/955471550140026880&quot;&gt;were not very stable at that time&lt;/a&gt;. This week I tested the &lt;a href=&quot;https://adoptopenjdk.net/nightly.html?variant=openjdk9-openj9&quot;&gt;nightly builds&lt;/a&gt; again to run the Eclipse IDE and I was pleasantly surprised: OpenJ9 ran without crashing. Here are my results: the &lt;strong&gt;start time&lt;/strong&gt; of the &lt;a href=&quot;http://www.eclipse.org/downloads/packages/eclipse-ide-java-developers/oxygen2&quot;&gt;Eclipse Oxygen.2 Java IDE&lt;/a&gt; &lt;strong&gt;improves with OpenJ9 from 20&lt;/strong&gt; to 17 seconds, with some tuning (see below) even &lt;strong&gt;to 12 seconds&lt;/strong&gt; compared to the Java 9 JDK with Oracle’s HotSpot VM on my more than six-year-old laptop. Also the Windows Task Manager shows &lt;strong&gt;less memory&lt;/strong&gt; used by the Eclipse IDE and tasks like compiling a large project are a &lt;strong&gt;bit faster&lt;/strong&gt; with OpenJ9.&lt;/p&gt;
&lt;p&gt;To start the Eclipse IDE with OpenJ9, in &lt;code&gt;eclipse.ini&lt;/code&gt; add the following two lines above &lt;code&gt;-vmargs&lt;/code&gt;:&lt;/p&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;&lt;code&gt;-vm&lt;br /&gt;
C:\path\to\jdk-9+181\bin\javaw.exe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Embedding the JDK into an Eclipse installation directory as &lt;code&gt;jre&lt;/code&gt; subdirectory does not yet work, but as long as you do not start the Eclipse IDE from the command line from another directory you can use &lt;code&gt;-vm&lt;/code&gt; with &lt;code&gt;jre\bin\javaw.exe&lt;/code&gt;. To further improve the startup time, add the following two lines below &lt;code&gt;-vmargs&lt;/code&gt;:&lt;/p&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;&lt;code&gt;-Xtune:virtualized&lt;br /&gt;
-Xshareclasses:cacheDir=C:\path\to\shareclasses&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://eclipsehowl.files.wordpress.com/2018/03/openj9_config.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter wp-image-1380 size-full&quot; height=&quot;353&quot; src=&quot;https://eclipsehowl.files.wordpress.com/2018/03/openj9_config.png?w=450&amp;amp;h=353&quot; width=&quot;450&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The cloning of a GitHub repository fails due to missing certificate authority (CA) certificates. You can fix this OpenJDK 9 issue by replacing the &lt;code&gt;lib\security&lt;/code&gt; directory (which contains the &lt;code&gt;cacerts&lt;/code&gt; file) with the same directory of an &lt;a href=&quot;http://jdk.java.net/10/&quot;&gt;OpenJDK 10 early access build&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://eclipsehowl.files.wordpress.com/2018/03/openj9_git_clone_fail.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter wp-image-1381 size-full&quot; src=&quot;https://eclipsehowl.files.wordpress.com/2018/03/openj9_git_clone_fail.png?w=450&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the Eclipse IDE that is running on OpenJDK the standard basic text font defaults (for reasons I don’t know) to &lt;em&gt;Courier New&lt;/em&gt; 10 instead of &lt;em&gt;Consolas&lt;/em&gt; 10. You can change this in &lt;em&gt;Window &amp;gt; Preferences: General &amp;gt; Appearance &amp;gt; Colors and Fonts&lt;/em&gt; by selecting &lt;em&gt;Basic &amp;gt; Text Font&lt;/em&gt; and pressing &lt;em&gt;Edit…&lt;/em&gt; (if you like, you can also use &lt;em&gt;&lt;a href=&quot;https://github.com/adobe-fonts/source-code-pro&quot;&gt;Source Code Pro&lt;/a&gt;&lt;/em&gt; 9 like the &lt;a href=&quot;https://marketplace.eclipse.org/content/clean-sheet&quot;&gt;Clean Sheet&lt;/a&gt; theme does).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://eclipsehowl.files.wordpress.com/2018/03/openj9_default_text_font.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter wp-image-1382 size-full&quot; src=&quot;https://eclipsehowl.files.wordpress.com/2018/03/openj9_default_text_font.png?w=450&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have not noticed so far any further differences between the Eclipse IDE running on Oracle’s JDK 9 and the Eclipse IDE running on the current OpenJDK 9 with OpenJ9 nightly build. Debugging and hot code replace works as expected.&lt;/p&gt;
&lt;p&gt;Many thanks to the &lt;a href=&quot;https://github.com/eclipse/openj9/graphs/contributors&quot;&gt;OpenJ9 team&lt;/a&gt;! I look forward to the final release. It’s great to have two good open source Java virtual machines for Windows. Who knows, but with only one of the two, neither of the two might be open source today.&lt;/p&gt;
&lt;p&gt;PS: If the Eclipse IDE still starts too slowly for you, have a look at a &lt;a href=&quot;http://www.eclipse.org/downloads/index-developer.php?photon&quot;&gt;developer build of the upcoming Eclipse Photon IDE&lt;/a&gt;. &lt;img alt=&quot;😉&quot; class=&quot;wp-smiley&quot; src=&quot;https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f609.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Fri, 09 Mar 2018 14:30:42 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse Foundation Announces 2018 Board Member Election Results</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/yj4XVjcSRCM/20180307-boardelectionresults2018.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/yj4XVjcSRCM/20180307-boardelectionresults2018.php</link>
	<description>Today we are please to announce the results of the Eclipse Foundation Sustaining Member and Committer Member elections.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/yj4XVjcSRCM&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 07 Mar 2018 23:00:00 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: CNCF Annual Report for 2017 and Kubernetes Graduation</title>
	<guid isPermaLink="false">http://aniszczyk.org/?p=4208</guid>
	<link>http://aniszczyk.org/2018/03/07/cncf-annual-report-for-2017-and-kubernetes-graduation/</link>
	<description>&lt;p&gt;We recently published the &lt;a href=&quot;https://www.cncf.io/wp-content/uploads/2018/03/CNCF-Annual-Report-2017.pdf&quot;&gt;first annual report&lt;/a&gt; for the &lt;a href=&quot;https://cncf.io&quot;&gt;Cloud Native Computing Foundation (CNCF)&lt;/a&gt; which encompassed our community’s work in 2017:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;&lt;img alt=&quot;⚡&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/2.4/72x72/26a1.png&quot; style=&quot;height: 1em;&quot; /&gt; happy to have us publish our first annual report for &lt;a href=&quot;https://twitter.com/CloudNativeFdn?ref_src=twsrc%5Etfw&quot;&gt;@CloudNativeFdn&lt;/a&gt;, we will continue to do this annually from now on! &lt;a href=&quot;https://t.co/9nwvBMoN10&quot;&gt;https://t.co/9nwvBMoN10&lt;/a&gt; &lt;a href=&quot;https://t.co/n3La6Y55Jz&quot;&gt;pic.twitter.com/n3La6Y55Jz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Chris Aniszczyk (@cra) &lt;a href=&quot;https://twitter.com/cra/status/970824589646364674?ref_src=twsrc%5Etfw&quot;&gt;March 6, 2018&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The CNCF is technically a little over two years old and it was about time we start publishing annual reports based on our progress. This is a well treaded path by other open source foundations out there like the &lt;a href=&quot;https://www.eclipse.org/org/foundation/reports/annual_report.php&quot;&gt;Eclipse Foundation&lt;/a&gt; and &lt;a href=&quot;https://www.mozilla.org/en-US/foundation/annualreport/2016/&quot;&gt;Mozilla&lt;/a&gt; so we thank them for inspiration to be more transparent.&lt;/p&gt;
&lt;p&gt;Another thing that we launched this week was the &lt;a href=&quot;https://landscape.cncf.io/&quot;&gt;Cloud Native Landscape&lt;/a&gt; (interactive edition) and more importantly, the &lt;a href=&quot;https://github.com/cncf/landscape#trail-map&quot;&gt;Cloud Native Trailmap&lt;/a&gt; which guides you through the journey of becoming cloud native by adopting different projects in the foundation.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;… oh also forgot to mention we launched the Cloud Native Trail Map today which provides an overview for enterprises starting their cloud native journey &lt;a href=&quot;https://t.co/clwcqeay86&quot;&gt;https://t.co/clwcqeay86&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/lfosls?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#lfosls&lt;/a&gt; &lt;a href=&quot;https://t.co/2S1nQ7chqG&quot;&gt;pic.twitter.com/2S1nQ7chqG&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Chris Aniszczyk (@cra) &lt;a href=&quot;https://twitter.com/cra/status/971087176304795648?ref_src=twsrc%5Etfw&quot;&gt;March 6, 2018&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Finally, it was fantastic for&lt;a href=&quot;https://www.forbes.com/sites/janakirammsv/2018/03/07/kubernetes-becomes-the-first-project-to-graduate-from-the-cloud-native-computing-foundation/#4c7a5c884b8f&quot;&gt; Kubernetes to be the first project to graduate from the CNCF&lt;/a&gt;.  What does this exactly mean? This is very akin to graduation in other open source foundations such as the ASF. Graduation here is really about confidence in CNCF development processes and really a stamp from the CNCF Technical Oversight Committee (TOC) on what is a sustainable, production ready and mature open source project  you can bet your business on. As projects mature in the CNCF in terms of following solid open source governance processes and become widely adopted, expect to see more projects graduating in the future.&lt;/p&gt;</description>
	<pubDate>Wed, 07 Mar 2018 20:03:18 +0000</pubDate>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools 4.5.3.AM2 for Eclipse Oxygen.3</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/4.5.3.am2-for-oxygen.3.html</guid>
	<link>https://tools.jboss.org/blog/4.5.3.am2-for-oxygen.3.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Happy to announce 4.5.3.AM2 (Developer Milestone 2) build for Eclipse Oxygen.3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Downloads available at &lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.3.AM2.html&quot;&gt;JBoss Tools 4.5.3 AM2&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is New?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Full info is at &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.3.AM2.html&quot;&gt;this page&lt;/a&gt;. Some highlights are below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#openshift&quot;&gt;&lt;/a&gt;OpenShift&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;cdk-and-minishift-server-adapter-better-developer-experience&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#cdk-and-minishift-server-adapter-better-developer-experience&quot;&gt;&lt;/a&gt;CDK and Minishift Server Adapter better developer experience&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When working with both CDK and upstream Minishift, it is recommanded to distinguish environments through the MINISHIFT_HOME variable.
      It was possible before to use this parameter but it requires a two steps process:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;first create the server adapter (through the wizard)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;then change the MINISHIFT_HOME in the server adapter editor&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is now possible to set this parameter from the server adapter wizard. So now, everything is correctly setup when you create the
      server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let’s see an example with the CDK server adapter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;From the &lt;strong&gt;Servers&lt;/strong&gt; view, select the new Server menu item and enter cdk in the filter:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Select Red Hat Container Development Kit 3.2+&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk server adapter wizard2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk-server-adapter-wizard2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The MINISHIFT_HOME parameter can be set here and is defaulted.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;display-fuse-version-corresponding-to-camel-version-proposed&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#display-fuse-version-corresponding-to-camel-version-proposed&quot;&gt;&lt;/a&gt;Display Fuse version corresponding to Camel version proposed&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When you create a new project, you select the Camel version from a list. Now, the list of Camel versions includes the Fuse version to help you choose the version that corresponds to your production version.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Version also displayed in drop-down list close to Camel version&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/listOfFuseVersion.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;update-validation-for-similar-ids-between-a-component-and-its-definition&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#update-validation-for-similar-ids-between-a-component-and-its-definition&quot;&gt;&lt;/a&gt;Update validation for similar IDs between a component and its definition&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Starting with Camel 2.20, you can use similar IDs for the component name and its definition unless the specific property &quot;registerEndpointIdsFromRoute&quot; is provided.
      The validation process checks the Camel version and the value of the &quot;registerEndpointIdsFromRoute&quot; property.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For example:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;from id=&quot;timer&quot; uri=&quot;timer:timerName&quot;/&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-guidance-in-method-selection-for-factory-methods-on-global-bean&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#improved-guidance-in-method-selection-for-factory-methods-on-global-bean&quot;&gt;&lt;/a&gt;Improved guidance in method selection for factory methods on Global Bean&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When selecting factory method on a Global bean, a lot of possibilities were proposed in the user interface. The list of factory methods for a global bean is now limited to only those methods that match the constraints of the bean’s global definition type (bean or bean factory).&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;customize-eip-labels-in-the-diagram&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#customize-eip-labels-in-the-diagram&quot;&gt;&lt;/a&gt;Customize EIP labels in the diagram&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Fuse Tooling preferences page for the Editor view includes a new &quot;Preferred Labels&quot; option.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Fuse Tooling editor preference page&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/prefEIPLabels.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Use this option to define the label of EIP components (except endpoints) shown in the Editor’s Design view.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Dialog for defining the display text for an EIP&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/prefEIPLabelsResult.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;general&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#general&quot;&gt;&lt;/a&gt;General&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;credentials-framework&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#credentials-framework&quot;&gt;&lt;/a&gt;Credentials Framework&lt;/h4&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;sunsetting-jboss-org-credentials&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#sunsetting-jboss-org-credentials&quot;&gt;&lt;/a&gt;Sunsetting jboss.org credentials&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;code&gt;Download Runtimes&lt;/code&gt; and &lt;code&gt;CDK Server Adapter&lt;/code&gt; used the credentials framework to manage credentials. However, the JBoss.org credentials cannot be used any more
      as the underlying service used by these components does not support these credentials.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The credentials framework still supports the JBoss.org credentials in case other services / components require or use this credentials domain.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;aerogear&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#aerogear&quot;&gt;&lt;/a&gt;Aerogear&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;aerogear-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#aerogear-component-deprecation&quot;&gt;&lt;/a&gt;Aerogear component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Aerogear component has been marked deprecated as there is no more maintenance on the source code. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;arquillian&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#arquillian&quot;&gt;&lt;/a&gt;Arquillian&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;arquillian-component-removal&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#arquillian-component-removal&quot;&gt;&lt;/a&gt;Arquillian component removal&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Arquillian component has been removed from Red Hat Central as it has been deprecated a while ago.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;browsersim&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#browsersim&quot;&gt;&lt;/a&gt;BrowserSim&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;browsersim-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#browsersim-component-deprecation&quot;&gt;&lt;/a&gt;BrowserSim component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The BrowserSim component has been marked deprecated as there is no more maintenance on the source code. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;freemarker&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#freemarker&quot;&gt;&lt;/a&gt;Freemarker&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;freemarker-component-removal&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#freemarker-component-removal&quot;&gt;&lt;/a&gt;Freemarker component removal&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Freemarker component has been removed from Red Hat Central as it has been deprecated a while ago.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;livereload&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#livereload&quot;&gt;&lt;/a&gt;LiveReload&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;livereload-component-deprecation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#livereload-component-deprecation&quot;&gt;&lt;/a&gt;LiveReload component deprecation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The LiveReload component has been marked deprecated as there is no more maintenance on the source code. It is still available in Red Hat Central
      and may be removed in the future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 07 Mar 2018 09:39:23 +0000</pubDate>
</item>
<item>
	<title>EclipseCon France 2018: A sneak peek at the 2018 program</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/france2018/news/3718 at https://www.eclipsecon.org/france2018</guid>
	<link>https://www.eclipsecon.org/france2018/news/sneak-peek-2018-program</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Congratulations to the speakers on these five talks. The program committee has chosen them for early acceptance into the program.&lt;/p&gt;

&lt;p&gt;Remember, the &lt;a href=&quot;https://www.eclipsecon.org/france2018/cfp&quot; target=&quot;_blank&quot;&gt;final submission deadline&lt;/a&gt; is on &lt;strong&gt;Monday, March 19&lt;/strong&gt;!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/france2018/session/jakarta-ee-not-your-fathers-java-ee&quot; target=&quot;_blank&quot;&gt;Jakarta EE - Not Your Parents' Java EE&lt;/a&gt; - Kevin Sutter&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/france2018/session/making-emf-intelligent-ai&quot; target=&quot;_blank&quot;&gt;Making EMF Intelligent with AI&lt;/a&gt; - Niranjan Babu&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/france2018/session/scalable-cloud-ide-eclipse-che-and-kubernetesopenshift&quot; target=&quot;_blank&quot;&gt;Scalable Cloud IDE with Eclipse Che and Kubernetes / OpenShift&lt;/a&gt; - Sergii Kabashniuk&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/france2018/session/practical-cloud-native-java-development-microprofile&quot; target=&quot;_blank&quot;&gt;Practical Cloud Native Java Development with MicroProfile&lt;/a&gt; - Alasdair Nottingham&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.eclipsecon.org/france2018/session/cloud-scale-iot-messaging&quot; target=&quot;_blank&quot;&gt;Cloud Scale IoT Messaging&lt;/a&gt; - Jens Reimann and Dejan Bosanac&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/france2018/news/sneak-peek-2018-program&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/france2018/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/talk2_0.jpg?itok=1e3XuQt7&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 06 Mar 2018 20:21:55 +0000</pubDate>
</item>
<item>
	<title>Benjamin Cabe: Open IoT Challenge: What Have the Participants Been up To?</title>
	<guid isPermaLink="false">https://blog.benjamin-cabe.com/?p=3118</guid>
	<link>http://feedproxy.google.com/~r/benjamin-cabe-planet-eclipse/~3/QosXx71uUos/open-iot-challenge-participants</link>
	<description>&lt;p&gt;It’s now been a bit over two months since the participants to the &lt;a href=&quot;https://iot.eclipse.org/open-iot-challenge&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Open IoT Challenge&lt;/a&gt; have started to work on their projects, and like every year, I am pretty impressed by the creativity and the technical skills of all the teams.&lt;/p&gt;
&lt;p&gt;There are about &lt;strong&gt;12 teams&lt;/strong&gt; actively participating and &lt;a href=&quot;https://iot.eclipse.org/open-iot-challenge-entries/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;blogging&lt;/a&gt; about their journey (and probably more that are working in “stealth mode”), and I thought I would take some time to highlight some of the really cool things they are working on.&lt;/p&gt;
&lt;h2&gt;Trusted indoor positioning system for nursing homes&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://trusted827.wordpress.com&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Trusted IoT Approach&lt;/a&gt; team is not only working on building an indoor geolocation solution (using Bluetooth beacons), but they are also combining it with IOTA (i.e a distributed ledger) to turn it into a &lt;span style=&quot;text-decoration: underline;&quot;&gt;trusted&lt;/span&gt; indoor positioning system.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2018/03/03.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignright size-medium wp-image-3129&quot; height=&quot;244&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2018/03/03-300x244.png&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;Their main use case is nursing homes, and I think it is quite brilliant. What if there could be an immutable ledger of all the current and past positions of patients and nurses within a nursing home?  Clearly, this can help with scenarios where for example there are doubts as to whether a patient has properly been checked up on.&lt;/p&gt;
&lt;p&gt;They are building their project as Eclipse Kura plugins, and everything is open source – check out their code! &lt;a href=&quot;https://bitbucket.org/p-iot/jura&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://bitbucket.org/p-iot/jura&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Connected Industry Sensor Solutions&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2018/03/CISSOS.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter wp-image-3131 size-large&quot; height=&quot;123&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2018/03/CISSOS-1024x266.png&quot; width=&quot;474&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Year after year, I always hope that more participants to the IoT Challenge get into industrial scenarios, vs. simply focusing on building cool IoT gadgets. This year I am really happy to see that a team from Bosch Connected Industry is working on an Industrial IoT scenario and bridging the gap between the physical world of industrial equipment, and the Internet of Things. They are using &lt;a href=&quot;https://eclipse.org/ditto&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Ditto&lt;/a&gt; for building Digital Twins which I find really cool too &lt;img alt=&quot;🙂&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/2.4/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Activ-IoTy: automatic sports timing system&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2018/03/activioty-e1520010528632.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignright size-medium wp-image-3135&quot; height=&quot;300&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2018/03/activioty-175x300.png&quot; width=&quot;175&quot; /&gt;&lt;/a&gt;Activ-IoTy aims at enhancing sports timekeeping systems accurately, through IoT low-cost devices.&lt;/p&gt;
&lt;p&gt;The project is progressing really fast and the team’s &lt;a href=&quot;https://www.espinr.es/post/171411615533/activioty-controller-mqtt-subscriber&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;latest blog post&lt;/a&gt; contains lots of promising screenshots of the solution in action.&lt;/p&gt;
&lt;p&gt;There is a lot going on on &lt;a href=&quot;https://github.com/espinr/activioty&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Martin’s Github repository&lt;/a&gt; so you may want to have a look!&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;Alya, a DIY open-source smart mirror&lt;/h2&gt;
&lt;p&gt;Many of the participants are getting their hands really dirty with some hardware hacking, and the Alya team is no exception!&lt;/p&gt;
&lt;p&gt;They are building a smart mirror using the &lt;a href=&quot;http://www.up-board.org/upkits/up-squared-grove-iot-development-kit/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;UP Squared Grove IoT Development Kit&lt;/a&gt; that Intel was kind enough to give to the participants with the most promising ideas. They also use a Microsoft Kinect and a &lt;a href=&quot;https://www.matrix.one/products/creator&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;MATRIX creator&lt;/a&gt; to do advanced voice and gesture recognition.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2018/03/alya-smart-mirror.gif&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter wp-image-3138&quot; height=&quot;238&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2018/03/alya-smart-mirror.gif&quot; width=&quot;600&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Like most of the participants, they are making their work available in open source on their Github repo: &lt;a href=&quot;https://github.com/alya-mirror&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/alya-mirror&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Of course, there are many other teams participating to the challenge, so I really encourage you to have a look at &lt;a href=&quot;https://iot.eclipse.org/open-iot-challenge-entries/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;all the articles&lt;/a&gt; that the contestants have put together, and you can also follow the &lt;a href=&quot;https://twitter.com/search?f=tweets&amp;amp;vertical=default&amp;amp;q=%23OpenIoTChallenge&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;#OpenIoTChallenge&lt;/a&gt; hashtag on Twitter.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;The post &lt;a href=&quot;https://blog.benjamin-cabe.com/2018/03/02/open-iot-challenge-participants&quot; rel=&quot;nofollow&quot;&gt;Open IoT Challenge: What Have the Participants Been up To?&lt;/a&gt; appeared first on &lt;a href=&quot;https://blog.benjamin-cabe.com&quot; rel=&quot;nofollow&quot;&gt;Benjamin Cabé&lt;/a&gt;.&lt;/p&gt;
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/benjamin-cabe-planet-eclipse/~4/QosXx71uUos&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 02 Mar 2018 17:40:41 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: A Tale of Two Katas</title>
	<guid isPermaLink="false">https://medium.com/p/ec956410d26d</guid>
	<link>https://medium.com/@donraab/a-tale-of-two-katas-ec956410d26d?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Learn a modern Java Collections Library with more features and less waste.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*HlR_WuzRz0JxGOZlT-wZgA.png&quot; /&gt;Demonstrating the Pet Kata at the Eclipse Foundation booth at JavaOne&lt;/figure&gt;&lt;h3&gt;Have you tried a Code Kata?&lt;/h3&gt;&lt;p&gt;It really is the best way to learn a new framework or library. We have two katas for Eclipse Collections hosted on &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata&quot;&gt;GitHub&lt;/a&gt;. They are free hands-on training for what I would describe is the most feature rich and memory friendly Java Collections framework available today.&lt;/p&gt;&lt;h3&gt;What is a Code Kata?&lt;/h3&gt;&lt;p&gt;From the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;&lt;blockquote&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Kata&quot;&gt;kata&lt;/a&gt; is an exercise in martial arts. A &lt;a href=&quot;http://codekata.com/&quot;&gt;code kata&lt;/a&gt; is an exercise in programming which helps hone your skills through practice and repetition. The Eclipse Collections Kata is a fun way to help you learn idiomatic Eclipse Collections usage. This particular kata is set up as a series of unit tests which fail. Your task is to make them pass, using Eclipse Collections.&lt;/blockquote&gt;&lt;p&gt;We learn best by doing. Try one of the Eclipse Collections Code Katas and learn an amazing framework at your own pace in your IDE with hands-on coding exercises.&lt;/p&gt;&lt;h3&gt;The Company Kata&lt;/h3&gt;&lt;p&gt;The Company Kata was the first kata developed for Eclipse Collections. It has been used to teach thousands of developers how to use Eclipse Collections over the past ten years. It is a comprehensive set of exercises in the form of unit tests, built around a domain model focused on simple concepts like Company, Supplier, Customer, Order and LineItem.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/880/1*dBFhrMxJS1Bs0lwOWmhGFQ.png&quot; /&gt;The Company Kata Domain &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata/blob/master/docs/company-kata/company-domain.png&quot;&gt;Diagram&lt;/a&gt; from the web based slides&lt;/figure&gt;&lt;p&gt;Here are the &lt;a href=&quot;http://eclipse.github.io/eclipse-collections-kata/company-kata/#/&quot;&gt;web based slides&lt;/a&gt; that teach the concepts required to complete the Company Kata. The slides can also be read more quickly in convenient &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata/blob/master/docs/company-kata/slides.md&quot;&gt;markdown format&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;The Pet Kata&lt;/h3&gt;&lt;p&gt;The Pet Kata was developed three or four years ago in order to create a TL;DR kata for developers who didn’t want to spend eight hours in a class learning the Company Kata or three to four hours completing it on their own. The domain of the Pet Kata is simpler. There are classes for Person, Pet and PetType. A Person can have many Pets and a Pet has one Pet Type.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*4woUzzEdE1i9MwpQDV7hpQ.png&quot; /&gt;The Pet Kata domain &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata/blob/master/docs/pet-kata/pet-domain.png&quot;&gt;diagram&lt;/a&gt; from the web based slides&lt;/figure&gt;&lt;p&gt;Here are the &lt;a href=&quot;http://eclipse.github.io/eclipse-collections-kata/pet-kata/#/&quot;&gt;web based slides&lt;/a&gt; that teach the concepts required to complete the Company Kata. The slides can also be read more quickly in convenient &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata/blob/master/docs/pet-kata/slides.md&quot;&gt;markdown format&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;Getting started&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;Clone the repo here— &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata&quot;&gt;https://github.com/eclipse/eclipse-collections-kata&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Import the pom.xml file located in the root as a Maven Project in your favorite IDE&lt;/li&gt;&lt;li&gt;Pick one of the Kata folders (company-kata or pet-kata) and go to the tests directory&lt;/li&gt;&lt;li&gt;Start with Exercise 1&lt;/li&gt;&lt;li&gt;Run the unit tests — They should fail!&lt;/li&gt;&lt;li&gt;Get the tests to pass one by one&lt;/li&gt;&lt;li&gt;When you complete the last exercise— Congratulations!&lt;/li&gt;&lt;li&gt;Repeat as desired or complete the other kata to learn more iteration patterns and hone your skills using Eclipse Collections&lt;/li&gt;&lt;li&gt;Star the repo if you enjoyed the kata&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;Additional References&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;http://www.baeldung.com/eclipse-collections&quot;&gt;Introduction to Eclipse Collections&lt;/a&gt; (Baeldung Article)&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/articles/eclipse-collections&quot;&gt;The Java Evolution of Eclipse Collections&lt;/a&gt; (InfoQ Article)&lt;/li&gt;&lt;li&gt;The &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/docs/guide.md&quot;&gt;Eclipse Collections Reference Guide&lt;/a&gt;&lt;/li&gt;&lt;li&gt;The &lt;a href=&quot;http://eclipse.github.io/eclipse-collections-kata/api-design/#/&quot;&gt;API Design of Eclipse Collections&lt;/a&gt; — (&lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata/blob/master/docs/api-design/slides.md&quot;&gt;markdown format&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/wiki/Conference-talks-and-meetups&quot;&gt;Conference Talks and Meetups&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;Eclipse Collections Website&lt;/a&gt; — (available in English, Chinese, Japanese, Russian and Brazilian Portuguese)&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;If you attend GIDS 2018 (Great Indian Developer Summit — Bangalore, India) in April, you can sign up and learn the &lt;a href=&quot;http://www.developermarch.com/developersummit/session.html?insert=NikhilNanivadekar2&quot;&gt;Eclipse Collections Kata in a GIDS.DEEPDIVE session on April 28th&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=ec956410d26d&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 02 Mar 2018 03:59:36 +0000</pubDate>
</item>
<item>
	<title>Wim Jongman: The new Bling. Part 1: Nebula and Opal</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-4740251930569090138.post-723630388355890490</guid>
	<link>http://industrial-tsi-wim.blogspot.com/2018/03/the-new-bling-part-1-nebula-and-opal.html</link>
	<description>Recent studies [1] seem to suggest that companies are becoming tired of building web applications in favor of the rich client. Good news for the newly weds: Nebula and Opal!&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;br /&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-CWBPqeMckbo/Wpg26zVyBuI/AAAAAAAABDQ/OCY7J6LFWxYjlabgfycmXFU0qWOzfoQDgCLcBGAs/s1600/opal.png&quot; style=&quot;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;285&quot; src=&quot;https://2.bp.blogspot.com/-CWBPqeMckbo/Wpg26zVyBuI/AAAAAAAABDQ/OCY7J6LFWxYjlabgfycmXFU0qWOzfoQDgCLcBGAs/s400/opal.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;br /&gt;You &lt;a href=&quot;https://eclipse.org/nebula&quot; target=&quot;_blank&quot;&gt;might know Nebula&lt;/a&gt;, which provides of a number of beautiful and functional widgets to spice up your RCP applications. You might not know Opal. Opal has been roaming freely on the internet and has been programmed largely by Laurent Caron.&lt;br /&gt;&lt;br /&gt;I have been chasing Laurent to join the Nebula project since 2014 and after some hard work over the last couple of months we finally did it:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-size: large;&quot;&gt;&lt;span&gt;&quot;two dozen new widgets have moved to Eclipse.&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;A great time to remove my blog from the mothballs (a Dutch saying, but you get the idea) and put some of Nebula's new widgets in the spotlight.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style=&quot;text-align: left;&quot;&gt;The new Bling. Part 1. The CheckboxGroup&lt;/h3&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Laurent, this is such a great idea! There are many times when you want to enable a group of  widgets based on an initial selection. The whole boilerplate code of such a pattern in standard SWT is ugly as mud. Check this code and tell me if you recognize it:&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;    proxyBox.addSelectionListener( event -&amp;gt; { &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;       server.setEnabled(&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;proxyBox&lt;/span&gt;&lt;/span&gt;.getSelection();&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;       port.setEnabled(&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;proxyBox&lt;/span&gt;&lt;/span&gt;.getSelection());&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;       user.setEnabled(&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;proxyBox&lt;/span&gt;&lt;/span&gt;.getSelection());&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;       password.setEnabled(&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;proxyBox&lt;/span&gt;&lt;/span&gt;.getSelection());&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;span&gt;    });&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: small;&quot;&gt; &lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Enter the CheckboxGroup. On:&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://wiki.eclipse.org/images/e/ef/CheckBoxGroup1.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://wiki.eclipse.org/images/e/ef/CheckBoxGroup1.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;and off:&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://wiki.eclipse.org/images/d/d6/CheckBoxGroup2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://wiki.eclipse.org/images/d/d6/CheckBoxGroup2.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;From Laurent's wiki documentation:&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;You can set/get the text and the font of the checkbox, and you get the value of the selection by calling &lt;span style=&quot;font-size: x-small;&quot;&gt;&lt;span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;&lt;i&gt;isActivated()&lt;/i&gt;&lt;/span&gt;. &lt;/span&gt;&lt;/span&gt;In case you want to set the state of this checkbox programmatically (and thus enable or disable the content of the group) you use &lt;span&gt;&lt;i&gt;&lt;span style=&quot;font-size: xx-small;&quot;&gt;activate()&lt;/span&gt;&lt;/i&gt;&lt;/span&gt; and &lt;span style=&quot;font-size: small;&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-size: xx-small;&quot;&gt;&lt;span&gt;deactivate()&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/span&gt;&lt;span style=&quot;font-size: small;&quot;&gt;.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;The content, which is a Composite, is accessible with the getter &lt;span style=&quot;font-size: small;&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-size: xx-small;&quot;&gt;&lt;span&gt;getContent()&lt;/span&gt;&lt;/span&gt;&lt;/i&gt;&lt;/span&gt;.&lt;br /&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Pretty slick! And this is only one of the 24 new widgets!  You can &lt;a href=&quot;https://wiki.eclipse.org/Nebula_CheckboxGroup&quot; target=&quot;_blank&quot;&gt;get the CheckboxGrou&lt;/a&gt;p from the &lt;a href=&quot;https://www.eclipse.org/nebula/downloads.php&quot; target=&quot;_blank&quot;&gt;latest nighly builds&lt;/a&gt;.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Cheers,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Wim&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;[1] fake news&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 01 Mar 2018 18:15:14 +0000</pubDate>
	<author>noreply@blogger.com (Wim Jongman)</author>
</item>
<item>
	<title>Benjamin Cabe: Last Days to Participate to Our Annual IoT Developer Survey</title>
	<guid isPermaLink="false">https://blog.benjamin-cabe.com/?p=3095</guid>
	<link>http://feedproxy.google.com/~r/benjamin-cabe-planet-eclipse/~3/KP_BkZXoelM/last-days-participate-annual-iot-developer-survey</link>
	<description>&lt;p&gt;For the past three years, we have been partnering with a number of organizations – IEEE, Open Mobile Alliance and Agile-IoT – to get a sense of the general trends in the IoT industry through an &lt;strong&gt;&lt;a href=&quot;https://www.surveymonkey.com/r/iotsurvey18&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;online survey&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The fourth edition of this survey ends on March 5th&lt;/strong&gt;, and I am hoping that many of you who haven’t already will be participating – it litteraly takes just 5 minutes to answer. Whether you are actually a developer, or simply involved in building IoT solutions one way or the other, your input will be key to understanding what kind of IoT solutions people are building today, and more importantly how they are doing it.&lt;/p&gt;
&lt;p&gt;Like in previous years, we will be making publicly available both the consolidated and raw results of the survey, which should be one more reason to help us get as many respondents as possible so that the results can be even more valuable to your own organization, and to the community at large! &lt;img alt=&quot;🙂&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/2.4/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a class=&quot;&quot; href=&quot;http://bit.ly/iotsurvey2017&quot;&gt;results from last year&lt;/a&gt;, for example, provided interesting feedback on the rising interest in Industrial IoT, who people see as IoT corporate leaders, or what are the programming languages and frameworks typically used by developers.&lt;/p&gt;
&lt;p&gt;Please don’t wait and &lt;strong&gt;&lt;a href=&quot;https://www.surveymonkey.com/r/iotsurvey18&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;take the survey now&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://blog.benjamin-cabe.com/2018/03/01/last-days-participate-annual-iot-developer-survey&quot; rel=&quot;nofollow&quot;&gt;Last Days to Participate to Our Annual IoT Developer Survey&lt;/a&gt; appeared first on &lt;a href=&quot;https://blog.benjamin-cabe.com&quot; rel=&quot;nofollow&quot;&gt;Benjamin Cabé&lt;/a&gt;.&lt;/p&gt;
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/benjamin-cabe-planet-eclipse/~4/KP_BkZXoelM&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 01 Mar 2018 11:08:36 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: From Java EE to Jakarta EE</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/Ee7V_dfSCPk/</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/Ee7V_dfSCPk/</link>
	<description>We are happy to announce that the new name for the technology formerly known as Java EE is... Jakarta EE!&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/Ee7V_dfSCPk&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 26 Feb 2018 19:50:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: And the Name Is…</title>
	<guid isPermaLink="false">http://mmilinkov.wordpress.com/?p=1431</guid>
	<link>https://mmilinkov.wordpress.com/2018/02/26/and-the-name-is/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We are happy to announce that the new name for the technology formerly known as Java EE is….[insert drumroll]… &lt;/span&gt;&lt;b&gt;Jakarta EE&lt;/b&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Almost 7,000 people voted in our community poll, and over 64% voted in favour of Jakarta EE. Thanks to everyone who voted, &lt;/span&gt;&lt;a href=&quot;http://www.tomitribe.com/blog/2018/02/java-ee-to-jakarta-ee/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;blogged&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, or tweeted! This has been &lt;/span&gt;&lt;a href=&quot;https://mmilinkov.wordpress.com/2017/11/15/help-pick-the-new-name-for-java-ee/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;quite the process&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, and we are all really happy with the community support throughout.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;naming_poll_results&quot; class=&quot;alignnone size-full wp-image-1432&quot; src=&quot;https://mmilinkov.files.wordpress.com/2018/02/naming_poll_results.png?w=700&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;As we have been making progress on migrating Java EE to the Eclipse Foundation there have been a lot of moving pieces and parallel threads, especially around naming. Thankfully, we think we are getting to the end of this, and the names at least are starting to sort themselves out.  We have prepared this handy table to assist with the translation from the old names to the new names. &lt;/span&gt;&lt;/p&gt;
&lt;table border=&quot;1&quot; style=&quot;height: 186px;&quot; width=&quot;704&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;b&gt;Old Name&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;b&gt;New Name&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Java EE&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Jakarta EE&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Glassfish&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse Glassfish&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Java Community Process (JCP) [*]&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse_ee_next_charter.php&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse EE.next Working Group&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (EE.next)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Oracle development management&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/ee4j/charter&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Enterprise for Java&lt;/a&gt; (EE4J)&lt;br /&gt;
&lt;a href=&quot;https://projects.eclipse.org/projects/ee4j/pmc&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Project Management Committee&lt;/a&gt; (PMC)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note that permission for products to formally use the Jakarta EE trademark will be dependent upon passing a as-yet-to-be-defined compatibility program run by EE.next. However, as of today, it is preferred that when you are generically referring to this open source software platform that you call it Jakarta EE rather than EE4J. EE4J, the Eclipse Top-level project,  is the only name we’ve had for a couple of months, but as we at least tried to make clear, that was &lt;a href=&quot;https://mmilinkov.wordpress.com/2017/09/30/on-naming/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;never intended to be the brand name&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Update: Fixed a typo plus the formatting of the Glassfish row in the translation table.&lt;br /&gt;
&lt;/small&gt;&lt;small&gt;Update 2: [*] To be clear, the Java Community Process will continue to exist and to support the Java SE and ME communities. However, it will not be the place where Jakarta EE specifications will be developed.&lt;/small&gt;&lt;/p&gt;</description>
	<pubDate>Mon, 26 Feb 2018 19:00:19 +0000</pubDate>
</item>
<item>
	<title>EclipseCon France 2018: March 5th is the early selection deadline</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/france2018/news/3685 at https://www.eclipsecon.org/france2018</guid>
	<link>https://www.eclipsecon.org/france2018/news/march-5th-early-selection-deadline</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;In just a few days the Program Committee will select the first handful of talks before the final submission deadline on March 19th. Why do we do this? The early selections allow us to promote the core of the conference - your talks. Take the opportunity to get even more eyes on your technology - submit by March 5th to qualify!&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/france2018/news/march-5th-early-selection-deadline&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/france2018/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/Early%20deadline.png?itok=8D4pDAFP&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 26 Feb 2018 08:51:09 +0000</pubDate>
</item>
<item>
	<title>Doug Schaefer: Building a Custom Viewer for VS Code</title>
	<guid isPermaLink="false">https://cdtdoug.ca/tag/eclipse/rss/5a906bbc65afdf75547a1cd3</guid>
	<link>https://cdtdoug.ca/building-a-custom-viewer-for-vs-code/</link>
	<description>&lt;div class=&quot;kg-card-markdown&quot;&gt;&lt;p&gt;I attended the online CheConf this week and was impressed by a few of the sessions. Now don't get me wrong, I still have reservations over the practicality of having your IDE in the cloud, at least in the embedded space where engineers tend to be more conservative. Certainly running tools inside docker containers makes sense and I believe all IDEs, cloud and desktop, need to be able to interface with them and Jeff from Red Hat is making good progress with that in the CDT. So we're not so different.&lt;/p&gt;
&lt;p&gt;What did impress me from the sessions, though, is the progress we're starting to see with advanced visualizations using Web front ends. I was especially excited to see Mélanie from Obeo show Sirius there. And Silexica is doing some interesting visualizations of call graphs of C++ code with what I believe is D3.js. The charts you see come out of D3 are amazing, especially with animation. Being able to visualize complex systems this way will be a huge help to developers, epecially embedded engineers.&lt;/p&gt;
&lt;p&gt;As I mentioned at the beginning of last year, I'm very excited about Electron as a desktop IDE platform. After playing around a bit on my own, I decided to give up and start working with one that's already well ahead, Visual Studio Code. Despite their claims to be focused on providing a great text editor, the community is working hard to make it a full fledged IDE. With the extensibility available today, you can do the same advanced visualizations we saw at CheConf as well as many other online tools.&lt;/p&gt;
&lt;p&gt;I have created a demo of this capability as shown below. Click on the picture to see the github repo and the description in the README. It's dead simple but it shows how you can create a VS Code extension that renders in a webview whatever you would like with data fed from an embedded http server. It's a little weird, but once you get the plumbing done, you're on your way, and hopefully this demo can help you get started.&lt;/p&gt;
&lt;a href=&quot;https://github.com/dschaefer/vscode-custom-viewer&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/dschaefer/vscode-custom-viewer/18de5338b6bc6a5455efea521255dde6e6d28558/images/Capture.png&quot; style=&quot;display: block; margin: 0 auto;&quot; /&gt;
&lt;/a&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;There are many reasons why this move is important. There is so much momentum behind  web technologies with a seemingly endless line up of libraries on npm, to tutorials on the web, to people who know how to do this stuff. It only makes sense that we start to ride this wave as we did when the Eclipse IDE first came along. And, you know, fire this stuff up in a SWT Browser widget and you get that same experience and we can breath some new life into our old friend. It's an exciting future and it's a lot of fun trying to get there.&lt;/p&gt;
&lt;/div&gt;</description>
	<pubDate>Sat, 24 Feb 2018 01:12:47 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Help Wanted!</title>
	<guid isPermaLink="false">https://medium.com/p/b1acf25d8c8d</guid>
	<link>https://medium.com/@donraab/help-wanted-b1acf25d8c8d?source=rss-df39b86e9f04------2</link>
	<description>&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*Rp2ZAp0GMnbnuIubHOrxeA.png&quot; /&gt;Contribute to an open source project!&lt;/figure&gt;&lt;p&gt;Shhhh! I’m going to tell you a secret. It’s something that for a few people might just change their software development lives in unexpected and exciting ways.&lt;/p&gt;&lt;h4&gt;Contribute to an open source project!&lt;/h4&gt;&lt;p&gt;That’s not the secret though. I realize many of you have probably already thought of contributing to an open source project but were unsure how to get started.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;I can help you get started and it might be easier than you expect.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;That’s the secret.&lt;/p&gt;&lt;p&gt;There is a project called &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections &lt;/a&gt;which is managed at the &lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;Eclipse Foundation&lt;/a&gt; and is open for contributions from anyone. As open source libraries go, Eclipse Collections has a relatively low barrier of entry. Eclipse Collections is a library of Java data structures and algorithms.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: I am not a lawyer, and cannot dispense legal advice. I won’t be able to help you determine what you will be able or allowed to do given your personal situation. You will need to determine whether you are allowed to do something, and what if any approvals and process you need to follow from your employer if you are employed by someone else given their policies, procedures, agreements, etc. for contributing to FOSS projects. If you are unsure of what you are able to do, I would suggest not getting started until you clarify that and are 150% comfortable. Contact the &lt;a href=&quot;https://www.eclipse.org/legal/&quot;&gt;Eclipse Foundation&lt;/a&gt; if you want to understand the legal and governance rules over projects managed at the Foundation. The folks at the Eclipse Foundation are very helpful.&lt;/p&gt;&lt;p&gt;If you’d like to get started and are sure you are able to given your personal situation, here are some suggestions that might help you break through the initial barrier of contributing to an open source project. Not all contributions need to be made through code.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Try out the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata&quot;&gt;Eclipse Collections Kata&lt;/a&gt;s — this will help you understand what Eclipse Collection is all about. Once you understand Eclipse Collections, you may want to use it in your projects. If you use it in your projects, you may discover something that is missing that you would like to suggest and contribute. This is the best kind of code contribution to make to a project. Here you are helping yourself provide the functionality that you need. Eclipse Collections evolved from a single class called Iterate over the past 12+ years because folks like myself and &lt;a href=&quot;https://medium.com/u/4285d8a2ca86&quot;&gt;Nikhil&lt;/a&gt; and &lt;a href=&quot;https://medium.com/u/82b613b921f6&quot;&gt;Craig&lt;/a&gt; and &lt;a href=&quot;https://medium.com/u/18b43cac5e00&quot;&gt;Hiroshi&lt;/a&gt; and many others added things that they needed or wanted in the framework.&lt;/li&gt;&lt;li&gt;If you use and like Eclipse Collections you can also contribute to the community in many different ways. For instance you could… &lt;strong&gt;a)&lt;/strong&gt; give a talk on Eclipse Collections perhaps at a Java User Group meet-up &lt;strong&gt;b)&lt;/strong&gt; teach the katas to developers you know or at a Java User Group meet-up &lt;strong&gt;c)&lt;/strong&gt; write about it in a blog or article. This can help people discover that Eclipse Collections exists. This is an amazing contribution and can help introduce you to the growing community of Java developers!&lt;/li&gt;&lt;li&gt;If you are ready to try your hand at contributing code, the best place to start is the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; in Eclipse Collections.&lt;/li&gt;&lt;li&gt;What will you need to get started? &lt;strong&gt;1)&lt;/strong&gt; GitHub Account &lt;strong&gt;2)&lt;/strong&gt; Read, Understand and Sign Eclipse Foundation Contributor Agreement electronically &lt;strong&gt;3)&lt;/strong&gt; Git Client &lt;strong&gt;4) &lt;/strong&gt;JDK 8 &lt;strong&gt;5)&lt;/strong&gt; Maven &lt;strong&gt;6)&lt;/strong&gt; a Java IDE. The instructions in the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;contribution guide&lt;/a&gt; can help you on some of these things.&lt;/li&gt;&lt;li&gt;Find something you’d like to work on. This could come from the &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/issues&quot;&gt;issue log&lt;/a&gt; or may be something you would like added based on a use case you have that hasn’t been addressed before.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;What types of things can you work on that are potentially low cost?&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Documentation — You could add or update something in the Reference Guide which is in this &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/docs/guide.md&quot;&gt;Markdown file&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Test Coverage — If you find missing test coverage, adding test cases is a noble and much appreciated addition to any project.&lt;/li&gt;&lt;li&gt;Static Utility — Static utility methods are isolated, easy to test and can be a great place to start experimenting with new API ideas.&lt;/li&gt;&lt;li&gt;Bug Fixes — This is a great contribution which will include some investigation, a little coding in the library and maybe some additional testing to make sure the bug never comes back.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Beyond these low cost, low complexity options there is a table that shows the cost and complexity of different things that can be contributed to Eclipse Collections. &lt;a href=&quot;https://medium.com/u/4285d8a2ca86&quot;&gt;Nikhil&lt;/a&gt; and I gave a talk on a Eclipse Foundation virtual meet-up which is now on &lt;a href=&quot;https://www.youtube.com/watch?v=Xrx_407Dt-I&quot;&gt;YouTube&lt;/a&gt;.&lt;/p&gt;&lt;a href=&quot;https://medium.com/media/2ab2cb59ae47379914362745e7bbc2ee/href&quot;&gt;https://medium.com/media/2ab2cb59ae47379914362745e7bbc2ee/href&lt;/a&gt;&lt;p&gt;The talk included the following table that we displayed from our slide content.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*-VEtsFPSrTA2f01sylzvrA.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;http://eclipse.github.io/eclipse-collections-kata/api-design/#/4&quot;&gt;API Deep Dive: Designing Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;p&gt;As you gain more experience and confidence, you might want to tackle problems with increasing levels of complexity. All of the infrastructural skills you learn while contributing to Eclipse Collections will help you on any open source project you want to contribute to in the future.&lt;/p&gt;&lt;h4&gt;Help is wanted and available&lt;/h4&gt;&lt;p&gt;Not only will you be helping an open source project and community by contributing, but there are committers on the project who will help you grow and learn as a developer by providing feedback on any issues and pull requests you submit. I always look forward to code reviews and feedback from the community of Eclipse Collections project leads, committers and contributors. I have learned so much over the years from all of them. They continue to help me grow as a professional software developer.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=b1acf25d8c8d&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 23 Feb 2018 19:56:40 +0000</pubDate>
</item>

</channel>
</rss>
